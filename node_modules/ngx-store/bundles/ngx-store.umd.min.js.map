{"version":3,"sources":["ngx-store.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","this","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","isFunction","x","hostReportError","err","setTimeout","isObject","tryCatcher","tryCatchTarget","apply","e","errorObject","tryCatch","fn","UnsubscriptionErrorImpl","errors","Error","call","message","map","toString","join","name","flattenUnsubscriptionErrors","reduce","errs","concat","UnsubscriptionError","canReportError","observer","_a","closed_1","closed","destination","isStopped","Subscriber","toSubscriber","nextOrObserver","error","complete","rxSubscriber","empty","noop","pipeFromArray","fns","input","prev","getPromiseCtor","promiseCtor","config","Promise","ObjectUnsubscribedErrorImpl","empty$1","scheduler","emptyScheduled","EMPTY","Observable","subscriber","schedule","isScheduler","value","fromArray","sub","Subscription","add","next","subscribeToArray","scalar","result","_isScalar","of","args","_i","pop","undefined","throwError","dispatch","identity","ArgumentOutOfRangeErrorImpl","EmptyErrorImpl","project","thisArg","source","TypeError","lift","MapOperator","isPromise","subscribe","then","subscribeToResult","outerSubscriber","outerValue","outerIndex","InnerSubscriber","subscribeTo","isInteropObservable","observable","isIterable","iterator","fromPromise","subscribeToPromise","fromIterable","iterator$$1","return","done","subscribeToIterable","fromObservable","observable$$1","subscribeToObservable","from","isArrayLike","mergeMap","resultSelector","concurrent","Number","POSITIVE_INFINITY","pipe","a","ii","MergeMapOperator","mergeAll","fromEvent","eventName","options","isArray","setupSubscription","Array","slice","sourceObj","handler","unsubscribe","isEventTarget","source_1","addEventListener","removeEventListener","isJQueryStyleEventEmitter","source_2","on","off","isNodeStyleEventEmitter","source_3","addListener","removeListener","len","isNumeric","val","parseFloat","interval","period","async","dispatch$4","counter","state","merge","observables","last","isDate","Date","isNaN","delay","delayFor","now","Math","abs","DelayOperator","filter","predicate","FilterOperator","SharedStorage$1","keyOrConfig","WebStorage","sharedStorageUtility","SharedStorageService","webStorageUtility","service","propertyName","cacheItem","Cache","getCacheFor","targets","services","utilities","utility","get","getProxy","set","addTargets","currentTarget","saveValue","setPrototypeOf","__proto__","p","hasOwnProperty","_enable_super_gross_mode_that_will_cause_bad_things","useDeprecatedSynchronousErrorHandling","stack","_parent","_parents","_subscriptions","_unsubscribe","hasErrors","index","remove","trial","push","teardown","subscription","_addParent","tmp","subscriptions","subscriptionIndex","indexOf","splice","parent","Symbol","random","_super","destinationOrNext","_this","syncErrorValue","syncErrorThrown","syncErrorThrowable","_parentSubscription","SafeSubscriber","_next","_error","_complete","_unsubscribeAndRecycle","_parentSubscriber","observerOrNext","context","bind","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","_subscribe","operator","sink","_trySubscribe","console","warn","forEach","resolve","reject","operations","toPromise","ObjectUnsubscribedError","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscriber","Subject","hasError","thrownError","AnonymousSubject","copy","asObservable","AsyncAction","work","pending","id","recycleAsyncId","requestAsyncId","setInterval","flush","clearInterval","execute","_execute","errored","errorValue","actions","Action","QueueAction","Scheduler","SchedulerAction","AsyncScheduler","delegate","active","scheduled","action","shift","array","Notification","kind","hasValue","observe","do","accept","toObservable","createNext","undefinedValueNotification","createError","createComplete","completeNotification","MapSubscriber","count","OuterSubscriber","notifyNext","innerValue","innerIndex","innerSub","notifyError","notifyComplete","promise","getSymbolIterator","iterable","item","obj","obs","msg","MergeMapSubscriber","hasCompleted","buffer","_tryNext","_innerSub","ish","innerSubscriber","Debugger","isEnabled","prefix","doIfEnabled","memory","enumerable","configurable","assert","optionalParams","countReset","label","dir","addPrefix","info","log","time","timeEnd","timeLog","data","timeStamp","timeline","timelineEnd","trace","clear","countTitle","debug","dirxml","exception","group","groupTitle","groupCollapsed","groupEnd","markTimeline","profile","reportName","profileEnd","table","throw","DelaySubscriber","queue","notification","delay_1","max","_schedule","scheduleNotification","DelayMessage","FilterSubscriber","isEqual","CacheItem","proxy","_key","initializedTargets","Set","addServices","addUtilities","readValue","has","savedValue","propagateChange","Config","mutateObjects","mutate","_self","assign","save","methodsToOverwrite_1","method","_loop_1","entry","JSON","parse","stringify","originalFunction_1","ngOnDestroy","_self_1","delete","t","keys","resetProxy","utilityEntries","findIndex","cacheCandidate","getStorageName","items","Map","NgxStorageEvent","type","storageArea","initTimeStamp","bubbles","cancelBubble","cancelable","composed","window","defaultPrevented","eventPhase","isTrusted","path","returnValue","srcElement","url","location","href","isInternal","StorageEvent","initEvent","preventDefault","stopImmediatePropagation","stopPropagation","composedPath","AT_TARGET","BUBBLING_PHASE","WebStorageUtility","storage","previousPrefix","_prefix","_changes","_storage","startsWith","CONFIG_PREFIX","nameWithoutPrefix","trimPrefix","getItem","removeItem","getSettable","getGettable","getStorage","getStorageKey","localStorage","storageKey","storable","emitEvent","setItem","expires","callbackFn","replace","newValue","oldValue","event","ConfigHelper","_webStorageUtility","DefaultConfig","clearType","cookiesScope","cookiesCheckInterval","debugMode","ConfigFills","localStoragePrefix","NGXSTORE_CONFIG","_get","_set","_merge","Resource","_defaultValue","_path","considerDefault","pathString","setPath","split","appendPath","truncatePath","resetPath","setPrefix","changePrefix","fullValue","setDefaultValue","defaultValue","isNullOrUndefined","update","merge$1","WebStorageService","prefixKeys","decoratorKeys","load","changes","exactMatch","prefixOrClass","generateEvent","charAt","toLowerCase","mapNativeEvent","ev","NgxStorage","externalChanges","cookiesStorage","CookiesStorage","getAllItems","getAllKeys","document","domain","resolveDomain","cookie","cachedItemsMap","expirationDate","utcDate","toUTCString","cachedCookieString","map$$1","cookies","trim","eqPos","substr","cachedValue","hostname","match","getDomain","domainParts","s","getTime","SharedStorageUtility","sharedStorage","SharedStorage","sharedMap","func","localStorageUtility","sessionStorageUtility","sessionStorage","cookiesStorageUtility","LocalStorageService","Injectable","SessionStorageService","CookiesStorageService","WebStorageModule","NgModule","providers","Éµa","CookieStorage","LocalStorage","SessionStorage","TempStorage","TempStorageService","NgxResource"],"mappings":"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","file":"ngx-store.umd.min.js.map","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n\ttypeof define === 'function' && define.amd ? define('ngx-store', ['exports', '@angular/core'], factory) :\n\t(factory((global['ngx-store'] = {}),global.ng.core));\n}(this, (function (exports,core) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\n\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nvar config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = /*@__PURE__*/ new Error();\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction hostReportError(err) {\n    setTimeout(function () { throw err; });\n}\n\n/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nvar empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar errorObject = { e: {} };\n\n/** PURE_IMPORTS_START _errorObject PURE_IMPORTS_END */\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.e = e;\n        return errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction UnsubscriptionErrorImpl(errors) {\n    Error.call(this);\n    this.message = errors ?\n        errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n}\nUnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nvar UnsubscriptionError = UnsubscriptionErrorImpl;\n\n/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_tryCatch,_util_errorObject,_util_UnsubscriptionError PURE_IMPORTS_END */\nvar Subscription = /*@__PURE__*/ (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        while (_parent) {\n            _parent.remove(this);\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction(_unsubscribe)) {\n            var trial = tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.e instanceof UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]);\n            }\n        }\n        if (isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    var trial = tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.e;\n                        if (err instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function') {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar rxSubscriber = typeof Symbol === 'function'\n    ? /*@__PURE__*/ Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();\n\n/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\nvar Subscriber = /*@__PURE__*/ (function (_super) {\n    __extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        _this._parentSubscription = null;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        _this.destination = destinationOrNext;\n                        destinationOrNext.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriber] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        this._parentSubscription = null;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */\nfunction canReportError(observer) {\n    while (observer) {\n        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;\n        if (closed_1 || isStopped) {\n            return false;\n        }\n        else if (destination && destination instanceof Subscriber) {\n            observer = destination;\n        }\n        else {\n            observer = null;\n        }\n    }\n    return true;\n}\n\n/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber]) {\n            return nextOrObserver[rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(empty);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction noop() { }\n\n/** PURE_IMPORTS_START _noop PURE_IMPORTS_END */\n\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n\n/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_internal_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nvar Observable = /*@__PURE__*/ (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable$$1 = new Observable();\n        observable$$1.source = this;\n        observable$$1.operator = operator;\n        return observable$$1;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction ObjectUnsubscribedErrorImpl() {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n}\nObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nvar ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;\n\n/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nvar SubjectSubscription = /*@__PURE__*/ (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\n\n/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */\nvar SubjectSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\nvar Subject = /*@__PURE__*/ (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nvar AnonymousSubject = /*@__PURE__*/ (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nfunction refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator$1(source));\n    };\n}\nvar RefCountOperator$1 = /*@__PURE__*/ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber$1(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber$1 = /*@__PURE__*/ (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subject,_Observable,_Subscriber,_Subscription,_operators_refCount PURE_IMPORTS_END */\nvar ConnectableObservable = /*@__PURE__*/ (function (_super) {\n    __extends(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subjectFactory = subjectFactory;\n        _this._refCount = 0;\n        _this._isComplete = false;\n        return _this;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return refCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable));\n\nvar ConnectableSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(SubjectSubscriber));\nvar RefCountOperator = /*@__PURE__*/ (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        var _this = _super.call(this, destination) || this;\n        _this.connectable = connectable;\n        return _this;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount$$1 = connectable._refCount;\n        if (refCount$$1 <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount$$1 - 1;\n        if (refCount$$1 > 1) {\n            this.connection = null;\n            return;\n        }\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription,_Observable,_Subject PURE_IMPORTS_END */\n\nvar GroupByOperator = /*@__PURE__*/ (function () {\n    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    GroupByOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    };\n    return GroupByOperator;\n}());\nvar GroupBySubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(GroupBySubscriber, _super);\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.elementSelector = elementSelector;\n        _this.durationSelector = durationSelector;\n        _this.subjectSelector = subjectSelector;\n        _this.groups = null;\n        _this.attemptedToUnsubscribe = false;\n        _this.count = 0;\n        return _this;\n    }\n    GroupBySubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    };\n    GroupBySubscriber.prototype._group = function (value, key) {\n        var groups = this.groups;\n        if (!groups) {\n            groups = this.groups = new Map();\n        }\n        var group = groups.get(key);\n        var element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = (this.subjectSelector ? this.subjectSelector() : new Subject());\n            groups.set(key, group);\n            var groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                var duration = void 0;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    };\n    GroupBySubscriber.prototype._error = function (err) {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    };\n    GroupBySubscriber.prototype._complete = function () {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    };\n    GroupBySubscriber.prototype.removeGroup = function (key) {\n        this.groups.delete(key);\n    };\n    GroupBySubscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                _super.prototype.unsubscribe.call(this);\n            }\n        }\n    };\n    return GroupBySubscriber;\n}(Subscriber));\nvar GroupDurationSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(GroupDurationSubscriber, _super);\n    function GroupDurationSubscriber(key, group, parent) {\n        var _this = _super.call(this, group) || this;\n        _this.key = key;\n        _this.group = group;\n        _this.parent = parent;\n        return _this;\n    }\n    GroupDurationSubscriber.prototype._next = function (value) {\n        this.complete();\n    };\n    GroupDurationSubscriber.prototype._unsubscribe = function () {\n        var _a = this, parent = _a.parent, key = _a.key;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    };\n    return GroupDurationSubscriber;\n}(Subscriber));\nvar GroupedObservable = /*@__PURE__*/ (function (_super) {\n    __extends(GroupedObservable, _super);\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\n        var _this = _super.call(this) || this;\n        _this.key = key;\n        _this.groupSubject = groupSubject;\n        _this.refCountSubscription = refCountSubscription;\n        return _this;\n    }\n    GroupedObservable.prototype._subscribe = function (subscriber) {\n        var subscription = new Subscription();\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    };\n    return GroupedObservable;\n}(Observable));\nvar InnerRefCountSubscription = /*@__PURE__*/ (function (_super) {\n    __extends(InnerRefCountSubscription, _super);\n    function InnerRefCountSubscription(parent) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        parent.count++;\n        return _this;\n    }\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\n        var parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            _super.prototype.unsubscribe.call(this);\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    };\n    return InnerRefCountSubscription;\n}(Subscription));\n\n/** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */\nvar BehaviorSubject = /*@__PURE__*/ (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        var _this = _super.call(this) || this;\n        _this._value = _value;\n        return _this;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, this._value = value);\n    };\n    return BehaviorSubject;\n}(Subject));\n\n/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nvar Action = /*@__PURE__*/ (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        return _super.call(this) || this;\n    }\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return this;\n    };\n    return Action;\n}(Subscription));\n\n/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */\nvar AsyncAction = /*@__PURE__*/ (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n    };\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, delay) {\n        var errored = false;\n        var errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype._unsubscribe = function () {\n        var id = this.id;\n        var scheduler = this.scheduler;\n        var actions = scheduler.actions;\n        var index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    };\n    return AsyncAction;\n}(Action));\n\n/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nvar QueueAction = /*@__PURE__*/ (function (_super) {\n    __extends(QueueAction, _super);\n    function QueueAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    QueueAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay > 0) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    };\n    QueueAction.prototype.execute = function (state, delay) {\n        return (delay > 0 || this.closed) ?\n            _super.prototype.execute.call(this, state, delay) :\n            this._execute(state, delay);\n    };\n    QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        return scheduler.flush(this);\n    };\n    return QueueAction;\n}(AsyncAction));\n\nvar Scheduler = /*@__PURE__*/ (function () {\n    function Scheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    };\n    Scheduler.now = function () { return Date.now(); };\n    return Scheduler;\n}());\n\n/** PURE_IMPORTS_START tslib,_Scheduler PURE_IMPORTS_END */\nvar AsyncScheduler = /*@__PURE__*/ (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        var _this = _super.call(this, SchedulerAction, function () {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        }) || this;\n        _this.actions = [];\n        _this.active = false;\n        _this.scheduled = undefined;\n        return _this;\n    }\n    AsyncScheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return _super.prototype.schedule.call(this, work, delay, state);\n        }\n    };\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift());\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\n\n/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nvar QueueScheduler = /*@__PURE__*/ (function (_super) {\n    __extends(QueueScheduler, _super);\n    function QueueScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return QueueScheduler;\n}(AsyncScheduler));\n\n/** PURE_IMPORTS_START _QueueAction,_QueueScheduler PURE_IMPORTS_END */\nvar queue = /*@__PURE__*/ new QueueScheduler(QueueAction);\n\n/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nvar EMPTY = /*@__PURE__*/ new Observable(function (subscriber) { return subscriber.complete(); });\nfunction empty$1(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\n}\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar subscribeToArray = function (array) {\n    return function (subscriber) {\n        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        if (!subscriber.closed) {\n            subscriber.complete();\n        }\n    };\n};\n\n/** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToArray PURE_IMPORTS_END */\nfunction fromArray(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToArray(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            var i = 0;\n            sub.add(scheduler.schedule(function () {\n                if (i === input.length) {\n                    subscriber.complete();\n                    return;\n                }\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    sub.add(this.schedule());\n                }\n            }));\n            return sub;\n        });\n    }\n}\n\n/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nfunction scalar(value) {\n    var result = new Observable(function (subscriber) {\n        subscriber.next(value);\n        subscriber.complete();\n    });\n    result._isScalar = true;\n    result.value = value;\n    return result;\n}\n\n/** PURE_IMPORTS_START _util_isScheduler,_fromArray,_empty,_scalar PURE_IMPORTS_END */\nfunction of() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = args[args.length - 1];\n    if (isScheduler(scheduler)) {\n        args.pop();\n    }\n    else {\n        scheduler = undefined;\n    }\n    switch (args.length) {\n        case 0:\n            return empty$1(scheduler);\n        case 1:\n            return scheduler ? fromArray(args, scheduler) : scalar(args[0]);\n        default:\n            return fromArray(args, scheduler);\n    }\n}\n\n/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\nfunction throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(function (subscriber) { return subscriber.error(error); });\n    }\n    else {\n        return new Observable(function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });\n    }\n}\nfunction dispatch(_a) {\n    var error = _a.error, subscriber = _a.subscriber;\n    subscriber.error(error);\n}\n\n/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */\nvar Notification = /*@__PURE__*/ (function () {\n    function Notification(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    Notification.prototype.observe = function (observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    };\n    Notification.prototype.do = function (next, error, complete) {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    };\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    };\n    Notification.prototype.toObservable = function () {\n        var kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return of(this.value);\n            case 'E':\n                return throwError(this.error);\n            case 'C':\n                return empty$1();\n        }\n        throw new Error('unexpected notification kind value');\n    };\n    Notification.createNext = function (value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    };\n    Notification.createError = function (err) {\n        return new Notification('E', undefined, err);\n    };\n    Notification.createComplete = function () {\n        return Notification.completeNotification;\n    };\n    Notification.completeNotification = new Notification('C');\n    Notification.undefinedValueNotification = new Notification('N', undefined);\n    return Notification;\n}());\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */\n\nvar ObserveOnOperator = /*@__PURE__*/ (function () {\n    function ObserveOnOperator(scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    };\n    return ObserveOnOperator;\n}());\nvar ObserveOnSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(ObserveOnSubscriber, _super);\n    function ObserveOnSubscriber(destination, scheduler, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.scheduler = scheduler;\n        _this.delay = delay;\n        return _this;\n    }\n    ObserveOnSubscriber.dispatch = function (arg) {\n        var notification = arg.notification, destination = arg.destination;\n        notification.observe(destination);\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\n        var destination = this.destination;\n        destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    };\n    ObserveOnSubscriber.prototype._next = function (value) {\n        this.scheduleMessage(Notification.createNext(value));\n    };\n    ObserveOnSubscriber.prototype._error = function (err) {\n        this.scheduleMessage(Notification.createError(err));\n        this.unsubscribe();\n    };\n    ObserveOnSubscriber.prototype._complete = function () {\n        this.scheduleMessage(Notification.createComplete());\n        this.unsubscribe();\n    };\n    return ObserveOnSubscriber;\n}(Subscriber));\nvar ObserveOnMessage = /*@__PURE__*/ (function () {\n    function ObserveOnMessage(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n    return ObserveOnMessage;\n}());\n\n/** PURE_IMPORTS_START tslib,_Subject,_scheduler_queue,_Subscription,_operators_observeOn,_util_ObjectUnsubscribedError,_SubjectSubscription PURE_IMPORTS_END */\nvar ReplaySubject = /*@__PURE__*/ (function (_super) {\n    __extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) {\n            bufferSize = Number.POSITIVE_INFINITY;\n        }\n        if (windowTime === void 0) {\n            windowTime = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this) || this;\n        _this.scheduler = scheduler;\n        _this._events = [];\n        _this._infiniteTimeWindow = false;\n        _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        _this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            _this._infiniteTimeWindow = true;\n            _this.next = _this.nextInfiniteTimeWindow;\n        }\n        else {\n            _this.next = _this.nextTimeWindow;\n        }\n        return _this;\n    }\n    ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {\n        var _events = this._events;\n        _events.push(value);\n        if (_events.length > this._bufferSize) {\n            _events.shift();\n        }\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype.nextTimeWindow = function (value) {\n        this._events.push(new ReplayEvent(this._getNow(), value));\n        this._trimBufferThenGetEvents();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        var _infiniteTimeWindow = this._infiniteTimeWindow;\n        var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        var scheduler = this.scheduler;\n        var len = _events.length;\n        var subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (var i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function () {\n        var now = this._getNow();\n        var _bufferSize = this._bufferSize;\n        var _windowTime = this._windowTime;\n        var _events = this._events;\n        var eventsCount = _events.length;\n        var spliceCount = 0;\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    };\n    return ReplaySubject;\n}(Subject));\nvar ReplayEvent = /*@__PURE__*/ (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n\n/** PURE_IMPORTS_START tslib,_Subject,_Subscription PURE_IMPORTS_END */\nvar AsyncSubject = /*@__PURE__*/ (function (_super) {\n    __extends(AsyncSubject, _super);\n    function AsyncSubject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.value = null;\n        _this.hasNext = false;\n        _this.hasCompleted = false;\n        return _this;\n    }\n    AsyncSubject.prototype._subscribe = function (subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    AsyncSubject.prototype.next = function (value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    };\n    AsyncSubject.prototype.error = function (error) {\n        if (!this.hasCompleted) {\n            _super.prototype.error.call(this, error);\n        }\n    };\n    AsyncSubject.prototype.complete = function () {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            _super.prototype.next.call(this, this.value);\n        }\n        _super.prototype.complete.call(this);\n    };\n    return AsyncSubject;\n}(Subject));\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar nextHandle = 1;\nvar tasksByHandle = {};\nfunction runIfPresent(handle) {\n    var cb = tasksByHandle[handle];\n    if (cb) {\n        cb();\n    }\n}\nvar Immediate = {\n    setImmediate: function (cb) {\n        var handle = nextHandle++;\n        tasksByHandle[handle] = cb;\n        Promise.resolve().then(function () { return runIfPresent(handle); });\n        return handle;\n    },\n    clearImmediate: function (handle) {\n        delete tasksByHandle[handle];\n    },\n};\n\n/** PURE_IMPORTS_START tslib,_util_Immediate,_AsyncAction PURE_IMPORTS_END */\nvar AsapAction = /*@__PURE__*/ (function (_super) {\n    __extends(AsapAction, _super);\n    function AsapAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    };\n    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    };\n    return AsapAction;\n}(AsyncAction));\n\n/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nvar AsapScheduler = /*@__PURE__*/ (function (_super) {\n    __extends(AsapScheduler, _super);\n    function AsapScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AsapScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsapScheduler;\n}(AsyncScheduler));\n\n/** PURE_IMPORTS_START _AsapAction,_AsapScheduler PURE_IMPORTS_END */\nvar asap = /*@__PURE__*/ new AsapScheduler(AsapAction);\n\n/** PURE_IMPORTS_START _AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\nvar async = /*@__PURE__*/ new AsyncScheduler(AsyncAction);\n\n/** PURE_IMPORTS_START tslib,_AsyncAction PURE_IMPORTS_END */\nvar AnimationFrameAction = /*@__PURE__*/ (function (_super) {\n    __extends(AnimationFrameAction, _super);\n    function AnimationFrameAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () { return scheduler.flush(null); }));\n    };\n    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        if (scheduler.actions.length === 0) {\n            cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        return undefined;\n    };\n    return AnimationFrameAction;\n}(AsyncAction));\n\n/** PURE_IMPORTS_START tslib,_AsyncScheduler PURE_IMPORTS_END */\nvar AnimationFrameScheduler = /*@__PURE__*/ (function (_super) {\n    __extends(AnimationFrameScheduler, _super);\n    function AnimationFrameScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AnimationFrameScheduler.prototype.flush = function (action) {\n        this.active = true;\n        this.scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        var index = -1;\n        var count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AnimationFrameScheduler;\n}(AsyncScheduler));\n\n/** PURE_IMPORTS_START _AnimationFrameAction,_AnimationFrameScheduler PURE_IMPORTS_END */\nvar animationFrame = /*@__PURE__*/ new AnimationFrameScheduler(AnimationFrameAction);\n\n/** PURE_IMPORTS_START tslib,_AsyncAction,_AsyncScheduler PURE_IMPORTS_END */\nvar VirtualTimeScheduler = /*@__PURE__*/ (function (_super) {\n    __extends(VirtualTimeScheduler, _super);\n    function VirtualTimeScheduler(SchedulerAction, maxFrames) {\n        if (SchedulerAction === void 0) {\n            SchedulerAction = VirtualAction;\n        }\n        if (maxFrames === void 0) {\n            maxFrames = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this, SchedulerAction, function () { return _this.frame; }) || this;\n        _this.maxFrames = maxFrames;\n        _this.frame = 0;\n        _this.index = -1;\n        return _this;\n    }\n    VirtualTimeScheduler.prototype.flush = function () {\n        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\n        var error, action;\n        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    VirtualTimeScheduler.frameTimeFactor = 10;\n    return VirtualTimeScheduler;\n}(AsyncScheduler));\nvar VirtualAction = /*@__PURE__*/ (function (_super) {\n    __extends(VirtualAction, _super);\n    function VirtualAction(scheduler, work, index) {\n        if (index === void 0) {\n            index = scheduler.index += 1;\n        }\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.index = index;\n        _this.active = true;\n        _this.index = scheduler.index = index;\n        return _this;\n    }\n    VirtualAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (!this.id) {\n            return _super.prototype.schedule.call(this, state, delay);\n        }\n        this.active = false;\n        var action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    };\n    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        this.delay = scheduler.frame + delay;\n        var actions = scheduler.actions;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    };\n    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return undefined;\n    };\n    VirtualAction.prototype._execute = function (state, delay) {\n        if (this.active === true) {\n            return _super.prototype._execute.call(this, state, delay);\n        }\n    };\n    VirtualAction.sortActions = function (a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    return VirtualAction;\n}(AsyncAction));\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction identity(x) {\n    return x;\n}\n\n/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction ArgumentOutOfRangeErrorImpl() {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n}\nArgumentOutOfRangeErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nvar ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction EmptyErrorImpl() {\n    Error.call(this);\n    this.message = 'no elements in sequence';\n    this.name = 'EmptyError';\n    return this;\n}\nEmptyErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\nvar EmptyError = EmptyErrorImpl;\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nfunction map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nvar MapOperator = /*@__PURE__*/ (function () {\n    function MapOperator(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    MapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    };\n    return MapOperator;\n}());\nvar MapSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(MapSubscriber, _super);\n    function MapSubscriber(destination, project, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.count = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    MapSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return MapSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isArray,_util_isScheduler PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _Observable,_AsyncSubject,_operators_map,_util_canReportError,_util_isScheduler,_util_isArray PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nvar OuterSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nvar InnerSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.outerValue = outerValue;\n        _this.outerIndex = outerIndex;\n        _this.index = 0;\n        return _this;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _hostReportError PURE_IMPORTS_END */\nvar subscribeToPromise = function (promise) {\n    return function (subscriber) {\n        promise.then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, hostReportError);\n        return subscriber;\n    };\n};\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nvar iterator = /*@__PURE__*/ getSymbolIterator();\n\n/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nvar subscribeToIterable = function (iterable) {\n    return function (subscriber) {\n        var iterator$$1 = iterable[iterator]();\n        do {\n            var item = iterator$$1.next();\n            if (item.done) {\n                subscriber.complete();\n                break;\n            }\n            subscriber.next(item.value);\n            if (subscriber.closed) {\n                break;\n            }\n        } while (true);\n        if (typeof iterator$$1.return === 'function') {\n            subscriber.add(function () {\n                if (iterator$$1.return) {\n                    iterator$$1.return();\n                }\n            });\n        }\n        return subscriber;\n    };\n};\n\n/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nvar subscribeToObservable = function (obj) {\n    return function (subscriber) {\n        var obs = obj[observable]();\n        if (typeof obs.subscribe !== 'function') {\n            throw new TypeError('Provided object does not correctly implement Symbol.observable');\n        }\n        else {\n            return obs.subscribe(subscriber);\n        }\n    };\n};\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n\n/** PURE_IMPORTS_START _Observable,_subscribeToArray,_subscribeToPromise,_subscribeToIterable,_subscribeToObservable,_isArrayLike,_isPromise,_isObject,_symbol_iterator,_symbol_observable PURE_IMPORTS_END */\nvar subscribeTo = function (result) {\n    if (result instanceof Observable) {\n        return function (subscriber) {\n            if (result._isScalar) {\n                subscriber.next(result.value);\n                subscriber.complete();\n                return undefined;\n            }\n            else {\n                return result.subscribe(subscriber);\n            }\n        };\n    }\n    else if (result && typeof result[observable] === 'function') {\n        return subscribeToObservable(result);\n    }\n    else if (isArrayLike(result)) {\n        return subscribeToArray(result);\n    }\n    else if (isPromise(result)) {\n        return subscribeToPromise(result);\n    }\n    else if (result && typeof result[iterator] === 'function') {\n        return subscribeToIterable(result);\n    }\n    else {\n        var value = isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = \"You provided \" + value + \" where a stream was expected.\"\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        throw new TypeError(msg);\n    }\n};\n\n/** PURE_IMPORTS_START _InnerSubscriber,_subscribeTo PURE_IMPORTS_END */\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex, destination) {\n    if (destination === void 0) {\n        destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    }\n    if (destination.closed) {\n        return;\n    }\n    return subscribeTo(result)(destination);\n}\n\n/** PURE_IMPORTS_START tslib,_util_isScheduler,_util_isArray,_OuterSubscriber,_util_subscribeToResult,_fromArray PURE_IMPORTS_END */\nvar NONE = {};\n\nvar CombineLatestOperator = /*@__PURE__*/ (function () {\n    function CombineLatestOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n    };\n    return CombineLatestOperator;\n}());\nvar CombineLatestSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, resultSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.resultSelector = resultSelector;\n        _this.active = 0;\n        _this.values = [];\n        _this.observables = [];\n        return _this;\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(NONE);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.resultSelector) {\n                this._tryResultSelector(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryResultSelector = function (values) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _symbol_observable PURE_IMPORTS_END */\nfunction isInteropObservable(input) {\n    return input && typeof input[observable] === 'function';\n}\n\n/** PURE_IMPORTS_START _symbol_iterator PURE_IMPORTS_END */\nfunction isIterable(input) {\n    return input && typeof input[iterator] === 'function';\n}\n\n/** PURE_IMPORTS_START _Observable,_Subscription,_util_subscribeToPromise PURE_IMPORTS_END */\nfunction fromPromise(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToPromise(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            sub.add(scheduler.schedule(function () {\n                return input.then(function (value) {\n                    sub.add(scheduler.schedule(function () {\n                        subscriber.next(value);\n                        sub.add(scheduler.schedule(function () { return subscriber.complete(); }));\n                    }));\n                }, function (err) {\n                    sub.add(scheduler.schedule(function () { return subscriber.error(err); }));\n                });\n            }));\n            return sub;\n        });\n    }\n}\n\n/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator,_util_subscribeToIterable PURE_IMPORTS_END */\nfunction fromIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    if (!scheduler) {\n        return new Observable(subscribeToIterable(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            var iterator$$1;\n            sub.add(function () {\n                if (iterator$$1 && typeof iterator$$1.return === 'function') {\n                    iterator$$1.return();\n                }\n            });\n            sub.add(scheduler.schedule(function () {\n                iterator$$1 = input[iterator]();\n                sub.add(scheduler.schedule(function () {\n                    if (subscriber.closed) {\n                        return;\n                    }\n                    var value;\n                    var done;\n                    try {\n                        var result = iterator$$1.next();\n                        value = result.value;\n                        done = result.done;\n                    }\n                    catch (err) {\n                        subscriber.error(err);\n                        return;\n                    }\n                    if (done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(value);\n                        this.schedule();\n                    }\n                }));\n            }));\n            return sub;\n        });\n    }\n}\n\n/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_observable,_util_subscribeToObservable PURE_IMPORTS_END */\nfunction fromObservable(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToObservable(input));\n    }\n    else {\n        return new Observable(function (subscriber) {\n            var sub = new Subscription();\n            sub.add(scheduler.schedule(function () {\n                var observable$$1 = input[observable]();\n                sub.add(observable$$1.subscribe({\n                    next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },\n                    error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },\n                    complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },\n                }));\n            }));\n            return sub;\n        });\n    }\n}\n\n/** PURE_IMPORTS_START _Observable,_util_isPromise,_util_isArrayLike,_util_isInteropObservable,_util_isIterable,_fromArray,_fromPromise,_fromIterable,_fromObservable,_util_subscribeTo PURE_IMPORTS_END */\nfunction from(input, scheduler) {\n    if (!scheduler) {\n        if (input instanceof Observable) {\n            return input;\n        }\n        return new Observable(subscribeTo(input));\n    }\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return fromObservable(input, scheduler);\n        }\n        else if (isPromise(input)) {\n            return fromPromise(input, scheduler);\n        }\n        else if (isArrayLike(input)) {\n            return fromArray(input, scheduler);\n        }\n        else if (isIterable(input) || typeof input === 'string') {\n            return fromIterable(input, scheduler);\n        }\n    }\n    throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n\n/** PURE_IMPORTS_START tslib,_util_subscribeToResult,_OuterSubscriber,_InnerSubscriber,_map,_observable_from PURE_IMPORTS_END */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    if (typeof resultSelector === 'function') {\n        return function (source) { return source.pipe(mergeMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };\n}\nvar MergeMapOperator = /*@__PURE__*/ (function () {\n    function MergeMapOperator(project, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        this.project = project;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nvar MergeMapSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, concurrent) {\n        if (concurrent === void 0) {\n            concurrent = Number.POSITIVE_INFINITY;\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        subscribeToResult(this, ish, value, index, innerSubscriber);\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _mergeMap,_util_identity PURE_IMPORTS_END */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Number.POSITIVE_INFINITY;\n    }\n    return mergeMap(identity, concurrent);\n}\n\n/** PURE_IMPORTS_START _mergeAll PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _util_isScheduler,_of,_from,_operators_concatAll PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Observable,_util_isArray,_empty,_util_subscribeToResult,_OuterSubscriber,_operators_map PURE_IMPORTS_END */\n\nvar ForkJoinSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(ForkJoinSubscriber, _super);\n    function ForkJoinSubscriber(destination, sources) {\n        var _this = _super.call(this, destination) || this;\n        _this.sources = sources;\n        _this.completed = 0;\n        _this.haveValues = 0;\n        var len = sources.length;\n        _this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            var source = sources[i];\n            var innerSubscription = subscribeToResult(_this, source, null, i);\n            if (innerSubscription) {\n                _this.add(innerSubscription);\n            }\n        }\n        return _this;\n    }\n    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    };\n    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n        var _a = this, destination = _a.destination, haveValues = _a.haveValues, values = _a.values;\n        var len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            destination.next(values);\n        }\n        destination.complete();\n    };\n    return ForkJoinSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nfunction fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));\n    }\n    return new Observable(function (subscriber) {\n        function handler(e) {\n            if (arguments.length > 1) {\n                subscriber.next(Array.prototype.slice.call(arguments));\n            }\n            else {\n                subscriber.next(e);\n            }\n        }\n        setupSubscription(target, eventName, handler, subscriber, options);\n    });\n}\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n    var unsubscribe;\n    if (isEventTarget(sourceObj)) {\n        var source_1 = sourceObj;\n        sourceObj.addEventListener(eventName, handler, options);\n        unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };\n    }\n    else if (isJQueryStyleEventEmitter(sourceObj)) {\n        var source_2 = sourceObj;\n        sourceObj.on(eventName, handler);\n        unsubscribe = function () { return source_2.off(eventName, handler); };\n    }\n    else if (isNodeStyleEventEmitter(sourceObj)) {\n        var source_3 = sourceObj;\n        sourceObj.addListener(eventName, handler);\n        unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n    }\n    else if (sourceObj && sourceObj.length) {\n        for (var i = 0, len = sourceObj.length; i < len; i++) {\n            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n        }\n    }\n    else {\n        throw new TypeError('Invalid event target');\n    }\n    subscriber.add(unsubscribe);\n}\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isEventTarget(sourceObj) {\n    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n\n/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _Observable,_util_identity,_util_isScheduler PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _defer,_empty PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _isArray PURE_IMPORTS_END */\nfunction isNumeric(val) {\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n\n/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric PURE_IMPORTS_END */\nfunction interval(period, scheduler) {\n    if (period === void 0) {\n        period = 0;\n    }\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(function (subscriber) {\n        subscriber.add(scheduler.schedule(dispatch$4, period, { subscriber: subscriber, counter: 0, period: period }));\n        return subscriber;\n    });\n}\nfunction dispatch$4(state) {\n    var subscriber = state.subscriber, counter = state.counter, period = state.period;\n    subscriber.next(counter);\n    this.schedule({ subscriber: subscriber, counter: counter + 1, period: period }, period);\n}\n\n/** PURE_IMPORTS_START _Observable,_util_isScheduler,_operators_mergeAll,_fromArray PURE_IMPORTS_END */\nfunction merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n        return observables[0];\n    }\n    return mergeAll(concurrent)(fromArray(observables, scheduler));\n}\n\n/** PURE_IMPORTS_START _Observable,_util_noop PURE_IMPORTS_END */\nvar NEVER = /*@__PURE__*/ new Observable(noop);\n\n/** PURE_IMPORTS_START _Observable,_from,_util_isArray,_empty PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_util_isArray,_fromArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar RaceOperator = /*@__PURE__*/ (function () {\n    function RaceOperator() {\n    }\n    RaceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    };\n    return RaceOperator;\n}());\nvar RaceSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(RaceSubscriber, _super);\n    function RaceSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasFirst = false;\n        _this.observables = [];\n        _this.subscriptions = [];\n        return _this;\n    }\n    RaceSubscriber.prototype._next = function (observable) {\n        this.observables.push(observable);\n    };\n    RaceSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (var i = 0; i < len && !this.hasFirst; i++) {\n                var observable = observables[i];\n                var subscription = subscribeToResult(this, observable, observable, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    };\n    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (var i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    var subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    };\n    return RaceSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _Observable,_scheduler_async,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _Observable,_from,_empty PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_OuterSubscriber,_util_subscribeToResult,_.._internal_symbol_iterator PURE_IMPORTS_END */\n\nvar ZipOperator = /*@__PURE__*/ (function () {\n    function ZipOperator(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    };\n    return ZipOperator;\n}());\nvar ZipSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, resultSelector, values) {\n        if (values === void 0) {\n            values = Object.create(null);\n        }\n        var _this = _super.call(this, destination) || this;\n        _this.iterators = [];\n        _this.active = 0;\n        _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n        _this.values = values;\n        return _this;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[iterator] === 'function') {\n            iterators.push(new StaticIterator(value[iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        this.unsubscribe();\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator$$1 = iterators[i];\n            if (iterator$$1.stillUnsubscribed) {\n                var destination = this.destination;\n                destination.add(iterator$$1.subscribe(iterator$$1, i));\n            }\n            else {\n                this.active--;\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        for (var i = 0; i < len; i++) {\n            var iterator$$1 = iterators[i];\n            if (typeof iterator$$1.hasValue === 'function' && !iterator$$1.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator$$1 = iterators[i];\n            var result = iterator$$1.next();\n            if (iterator$$1.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryresultSelector = function (args) {\n        var result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber));\nvar StaticIterator = /*@__PURE__*/ (function () {\n    function StaticIterator(iterator$$1) {\n        this.iterator = iterator$$1;\n        this.nextResult = iterator$$1.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = /*@__PURE__*/ (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\nvar ZipBufferIterator = /*@__PURE__*/ (function (_super) {\n    __extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        _this.observable = observable;\n        _this.stillUnsubscribed = true;\n        _this.buffer = [];\n        _this.isComplete = false;\n        return _this;\n    }\n    ZipBufferIterator.prototype[iterator] = function () {\n        return this;\n    };\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\n\nvar Debugger = /** @class */ (function () {\n    function Debugger(console, isEnabled, prefix) {\n        if (isEnabled === void 0) { isEnabled = true; }\n        if (prefix === void 0) { prefix = ''; }\n        this.prefix = '';\n        this.console = console;\n        this.isEnabled = isEnabled;\n        this.prefix = prefix;\n    }\n    Object.defineProperty(Debugger.prototype, \"memory\", {\n        get: function () {\n            return this.doIfEnabled(function () { return console.hasOwnProperty('memory') && console.memory; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Debugger.prototype.assert = function (value, message) {\n        var _this = this;\n        var optionalParams = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            optionalParams[_i - 2] = arguments[_i];\n        }\n        return this.doIfEnabled(function () {\n            var _a;\n            return (_a = _this.console).assert.apply(_a, [value, message].concat(optionalParams));\n        });\n    };\n    Debugger.prototype.countReset = function (label) {\n        var _this = this;\n        return this.doIfEnabled(function () { return _this.console.countReset(label); });\n    };\n    Debugger.prototype.dir = function (obj) {\n        var _this = this;\n        var options = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            options[_i - 1] = arguments[_i];\n        }\n        return this.doIfEnabled(function () {\n            var _a;\n            return (_a = _this.console).dir.apply(_a, [obj].concat(options));\n        });\n    };\n    Debugger.prototype.error = function (message) {\n        var _this = this;\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        return this.doIfEnabled(function () {\n            var _a;\n            return (_a = _this.console).error.apply(_a, [_this.addPrefix(message)].concat(optionalParams));\n        });\n    };\n    Debugger.prototype.info = function (message) {\n        var _this = this;\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        return this.doIfEnabled(function () {\n            var _a;\n            return (_a = _this.console).info.apply(_a, [_this.addPrefix(message)].concat(optionalParams));\n        });\n    };\n    Debugger.prototype.log = function (message) {\n        var _this = this;\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        return this.doIfEnabled(function () {\n            var _a;\n            return (_a = _this.console).log.apply(_a, [_this.addPrefix(message)].concat(optionalParams));\n        });\n    };\n    Debugger.prototype.time = function (label) {\n        var _this = this;\n        return this.doIfEnabled(function () { return _this.console.time(label); });\n    };\n    Debugger.prototype.timeEnd = function (label) {\n        var _this = this;\n        return this.doIfEnabled(function () { return _this.console.timeEnd(label); });\n    };\n    Debugger.prototype.timeLog = function (label) {\n        var _this = this;\n        var data = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            data[_i - 1] = arguments[_i];\n        }\n        return this.doIfEnabled(function () { return _this.console.timeLog(label, data); });\n    };\n    Debugger.prototype.timeStamp = function (label) {\n        var _this = this;\n        return this.doIfEnabled(function () { return _this.console.timeStamp(label); });\n    };\n    Debugger.prototype.timeline = function (label) {\n        var _this = this;\n        return this.doIfEnabled(function () { return _this.console.timeline(label); });\n    };\n    Debugger.prototype.timelineEnd = function (label) {\n        var _this = this;\n        return this.doIfEnabled(function () { return _this.console.timelineEnd(label); });\n    };\n    Debugger.prototype.trace = function (message) {\n        var _this = this;\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        return this.doIfEnabled(function () {\n            var _a;\n            return (_a = _this.console).trace.apply(_a, [_this.addPrefix(message)].concat(optionalParams));\n        });\n    };\n    Debugger.prototype.warn = function (message) {\n        var _this = this;\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        return this.doIfEnabled(function () {\n            var _a;\n            return (_a = _this.console).warn.apply(_a, [_this.addPrefix(message)].concat(optionalParams));\n        });\n    };\n    Debugger.prototype.clear = function () {\n        var _this = this;\n        return this.doIfEnabled(function () { return _this.console.clear(); });\n    };\n    Debugger.prototype.count = function (countTitle) {\n        var _this = this;\n        return this.doIfEnabled(function () { return _this.console.count(); });\n    };\n    Debugger.prototype.debug = function (message) {\n        var _this = this;\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        return this.doIfEnabled(function () {\n            var _a;\n            return (_a = _this.console).debug.apply(_a, [_this.addPrefix(message)].concat(optionalParams));\n        });\n    };\n    Debugger.prototype.dirxml = function (value) {\n        var _this = this;\n        return this.doIfEnabled(function () { return _this.console.dirxml(value); });\n    };\n    Debugger.prototype.exception = function (message) {\n        var _this = this;\n        var optionalParams = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            optionalParams[_i - 1] = arguments[_i];\n        }\n        return this.doIfEnabled(function () {\n            var _a;\n            return (_a = _this.console).exception.apply(_a, [_this.addPrefix(message)].concat(optionalParams));\n        });\n    };\n    Debugger.prototype.group = function (groupTitle) {\n        var _this = this;\n        return this.doIfEnabled(function () { return _this.console.group(groupTitle); });\n    };\n    Debugger.prototype.groupCollapsed = function (groupTitle) {\n        var _this = this;\n        return this.doIfEnabled(function () { return _this.console.groupCollapsed(groupTitle); });\n    };\n    Debugger.prototype.groupEnd = function () {\n        var _this = this;\n        return this.doIfEnabled(function () { return _this.console.groupEnd(); });\n    };\n    Debugger.prototype.markTimeline = function (label) {\n        var _this = this;\n        return this.doIfEnabled(function () { return _this.console.markTimeline(label); });\n    };\n    Debugger.prototype.profile = function (reportName) {\n        var _this = this;\n        return this.doIfEnabled(function () { return _this.console.profile(reportName); });\n    };\n    Debugger.prototype.profileEnd = function () {\n        var _this = this;\n        return this.doIfEnabled(function () { return _this.console.profileEnd(); });\n    };\n    Debugger.prototype.table = function () {\n        var _this = this;\n        var data = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            data[_i] = arguments[_i];\n        }\n        return this.doIfEnabled(function () {\n            var _a;\n            return (_a = _this.console).table.apply(_a, data);\n        });\n    };\n    /**\n     * Throws usual error in debug mode and non-blocking otherwise\n     * @param {Error} error\n     */\n    Debugger.prototype.throw = function (error) {\n        error.message = this.addPrefix(error.message);\n        if (this.isEnabled) {\n            throw error;\n        }\n        setTimeout(function () {\n            throw error;\n        });\n    };\n    Debugger.prototype.doIfEnabled = function (action) {\n        if (this.isEnabled) {\n            return action();\n        }\n    };\n    Debugger.prototype.addPrefix = function (message) {\n        if (this.prefix && (typeof message === 'string' || !message)) {\n            return this.prefix + message;\n        }\n        return message;\n    };\n    return Debugger;\n}());\n\n/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar AuditOperator = /*@__PURE__*/ (function () {\n    function AuditOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    AuditOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    };\n    return AuditOperator;\n}());\nvar AuditSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(AuditSubscriber, _super);\n    function AuditSubscriber(destination, durationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.durationSelector = durationSelector;\n        _this.hasValue = false;\n        return _this;\n    }\n    AuditSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            var duration = tryCatch(this.durationSelector)(value);\n            if (duration === errorObject) {\n                this.destination.error(errorObject.e);\n            }\n            else {\n                var innerSubscription = subscribeToResult(this, duration);\n                if (!innerSubscription || innerSubscription.closed) {\n                    this.clearThrottle();\n                }\n                else {\n                    this.add(this.throttled = innerSubscription);\n                }\n            }\n        }\n    };\n    AuditSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        this.clearThrottle();\n    };\n    AuditSubscriber.prototype.notifyComplete = function () {\n        this.clearThrottle();\n    };\n    return AuditSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _scheduler_async,_audit,_observable_timer PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar BufferOperator = /*@__PURE__*/ (function () {\n    function BufferOperator(closingNotifier) {\n        this.closingNotifier = closingNotifier;\n    }\n    BufferOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n    };\n    return BufferOperator;\n}());\nvar BufferSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(BufferSubscriber, _super);\n    function BufferSubscriber(destination, closingNotifier) {\n        var _this = _super.call(this, destination) || this;\n        _this.buffer = [];\n        _this.add(subscribeToResult(_this, closingNotifier));\n        return _this;\n    }\n    BufferSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var buffer = this.buffer;\n        this.buffer = [];\n        this.destination.next(buffer);\n    };\n    return BufferSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar BufferCountOperator = /*@__PURE__*/ (function () {\n    function BufferCountOperator(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\n            this.subscriberClass = BufferCountSubscriber;\n        }\n        else {\n            this.subscriberClass = BufferSkipCountSubscriber;\n        }\n    }\n    BufferCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n    };\n    return BufferCountOperator;\n}());\nvar BufferCountSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(BufferCountSubscriber, _super);\n    function BufferCountSubscriber(destination, bufferSize) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferSize = bufferSize;\n        _this.buffer = [];\n        return _this;\n    }\n    BufferCountSubscriber.prototype._next = function (value) {\n        var buffer = this.buffer;\n        buffer.push(value);\n        if (buffer.length == this.bufferSize) {\n            this.destination.next(buffer);\n            this.buffer = [];\n        }\n    };\n    BufferCountSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferCountSubscriber;\n}(Subscriber));\nvar BufferSkipCountSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(BufferSkipCountSubscriber, _super);\n    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferSize = bufferSize;\n        _this.startBufferEvery = startBufferEvery;\n        _this.buffers = [];\n        _this.count = 0;\n        return _this;\n    }\n    BufferSkipCountSubscriber.prototype._next = function (value) {\n        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;\n        this.count++;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (var i = buffers.length; i--;) {\n            var buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                buffers.splice(i, 1);\n                this.destination.next(buffer);\n            }\n        }\n    };\n    BufferSkipCountSubscriber.prototype._complete = function () {\n        var _a = this, buffers = _a.buffers, destination = _a.destination;\n        while (buffers.length > 0) {\n            var buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferSkipCountSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_scheduler_async,_Subscriber,_util_isScheduler PURE_IMPORTS_END */\n\nvar BufferTimeOperator = /*@__PURE__*/ (function () {\n    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n    }\n    BufferTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));\n    };\n    return BufferTimeOperator;\n}());\nvar Context = /*@__PURE__*/ (function () {\n    function Context() {\n        this.buffer = [];\n    }\n    return Context;\n}());\nvar BufferTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(BufferTimeSubscriber, _super);\n    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.bufferTimeSpan = bufferTimeSpan;\n        _this.bufferCreationInterval = bufferCreationInterval;\n        _this.maxBufferSize = maxBufferSize;\n        _this.scheduler = scheduler;\n        _this.contexts = [];\n        var context = _this.openContext();\n        _this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n        if (_this.timespanOnly) {\n            var timeSpanOnlyState = { subscriber: _this, context: context, bufferTimeSpan: bufferTimeSpan };\n            _this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n        else {\n            var closeState = { subscriber: _this, context: context };\n            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: _this, scheduler: scheduler };\n            _this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n            _this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n        }\n        return _this;\n    }\n    BufferTimeSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        var filledBufferContext;\n        for (var i = 0; i < len; i++) {\n            var context_1 = contexts[i];\n            var buffer = context_1.buffer;\n            buffer.push(value);\n            if (buffer.length == this.maxBufferSize) {\n                filledBufferContext = context_1;\n            }\n        }\n        if (filledBufferContext) {\n            this.onBufferFull(filledBufferContext);\n        }\n    };\n    BufferTimeSubscriber.prototype._error = function (err) {\n        this.contexts.length = 0;\n        _super.prototype._error.call(this, err);\n    };\n    BufferTimeSubscriber.prototype._complete = function () {\n        var _a = this, contexts = _a.contexts, destination = _a.destination;\n        while (contexts.length > 0) {\n            var context_2 = contexts.shift();\n            destination.next(context_2.buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferTimeSubscriber.prototype._unsubscribe = function () {\n        this.contexts = null;\n    };\n    BufferTimeSubscriber.prototype.onBufferFull = function (context) {\n        this.closeContext(context);\n        var closeAction = context.closeAction;\n        closeAction.unsubscribe();\n        this.remove(closeAction);\n        if (!this.closed && this.timespanOnly) {\n            context = this.openContext();\n            var bufferTimeSpan = this.bufferTimeSpan;\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\n            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n    };\n    BufferTimeSubscriber.prototype.openContext = function () {\n        var context = new Context();\n        this.contexts.push(context);\n        return context;\n    };\n    BufferTimeSubscriber.prototype.closeContext = function (context) {\n        this.destination.next(context.buffer);\n        var contexts = this.contexts;\n        var spliceIndex = contexts ? contexts.indexOf(context) : -1;\n        if (spliceIndex >= 0) {\n            contexts.splice(contexts.indexOf(context), 1);\n        }\n    };\n    return BufferTimeSubscriber;\n}(Subscriber));\nfunction dispatchBufferTimeSpanOnly(state) {\n    var subscriber = state.subscriber;\n    var prevContext = state.context;\n    if (prevContext) {\n        subscriber.closeContext(prevContext);\n    }\n    if (!subscriber.closed) {\n        state.context = subscriber.openContext();\n        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n    }\n}\nfunction dispatchBufferCreation(state) {\n    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;\n    var context = subscriber.openContext();\n    var action = this;\n    if (!subscriber.closed) {\n        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));\n        action.schedule(state, bufferCreationInterval);\n    }\n}\nfunction dispatchBufferClose(arg) {\n    var subscriber = arg.subscriber, context = arg.context;\n    subscriber.closeContext(context);\n}\n\n/** PURE_IMPORTS_START tslib,_Subscription,_util_subscribeToResult,_OuterSubscriber PURE_IMPORTS_END */\n\nvar BufferToggleOperator = /*@__PURE__*/ (function () {\n    function BufferToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    BufferToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return BufferToggleOperator;\n}());\nvar BufferToggleSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(BufferToggleSubscriber, _super);\n    function BufferToggleSubscriber(destination, openings, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.openings = openings;\n        _this.closingSelector = closingSelector;\n        _this.contexts = [];\n        _this.add(subscribeToResult(_this, openings));\n        return _this;\n    }\n    BufferToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        for (var i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    };\n    BufferToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context_1 = contexts.shift();\n            context_1.subscription.unsubscribe();\n            context_1.buffer = null;\n            context_1.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._error.call(this, err);\n    };\n    BufferToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context_2 = contexts.shift();\n            this.destination.next(context_2.buffer);\n            context_2.subscription.unsubscribe();\n            context_2.buffer = null;\n            context_2.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._complete.call(this);\n    };\n    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    };\n    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.closeBuffer(innerSub.context);\n    };\n    BufferToggleSubscriber.prototype.openBuffer = function (value) {\n        try {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    BufferToggleSubscriber.prototype.closeBuffer = function (context) {\n        var contexts = this.contexts;\n        if (contexts && context) {\n            var buffer = context.buffer, subscription = context.subscription;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    };\n    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\n        var contexts = this.contexts;\n        var buffer = [];\n        var subscription = new Subscription();\n        var context = { buffer: buffer, subscription: subscription };\n        contexts.push(context);\n        var innerSubscription = subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    };\n    return BufferToggleSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscription,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar BufferWhenOperator = /*@__PURE__*/ (function () {\n    function BufferWhenOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    BufferWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    };\n    return BufferWhenOperator;\n}());\nvar BufferWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(BufferWhenSubscriber, _super);\n    function BufferWhenSubscriber(destination, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.closingSelector = closingSelector;\n        _this.subscribing = false;\n        _this.openBuffer();\n        return _this;\n    }\n    BufferWhenSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferWhenSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferWhenSubscriber.prototype._unsubscribe = function () {\n        this.buffer = null;\n        this.subscribing = false;\n    };\n    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openBuffer();\n    };\n    BufferWhenSubscriber.prototype.notifyComplete = function () {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    };\n    BufferWhenSubscriber.prototype.openBuffer = function () {\n        var closingSubscription = this.closingSubscription;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        var buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        var closingNotifier = tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject) {\n            this.error(errorObject.e);\n        }\n        else {\n            closingSubscription = new Subscription();\n            this.closingSubscription = closingSubscription;\n            this.add(closingSubscription);\n            this.subscribing = true;\n            closingSubscription.add(subscribeToResult(this, closingNotifier));\n            this.subscribing = false;\n        }\n    };\n    return BufferWhenSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar CatchOperator = /*@__PURE__*/ (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\nvar CatchSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        var _this = _super.call(this, destination) || this;\n        _this.selector = selector;\n        _this.caught = caught;\n        return _this;\n    }\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                _super.prototype.error.call(this, err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n            this.add(innerSubscriber);\n            subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n        }\n    };\n    return CatchSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _observable_combineLatest PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _util_isArray,_observable_combineLatest,_observable_from PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _observable_concat PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _concatMap PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar CountOperator = /*@__PURE__*/ (function () {\n    function CountOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    CountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n    };\n    return CountOperator;\n}());\nvar CountSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(CountSubscriber, _super);\n    function CountSubscriber(destination, predicate, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.count = 0;\n        _this.index = 0;\n        return _this;\n    }\n    CountSubscriber.prototype._next = function (value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._tryPredicate = function (value) {\n        var result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._complete = function () {\n        this.destination.next(this.count);\n        this.destination.complete();\n    };\n    return CountSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar DebounceOperator = /*@__PURE__*/ (function () {\n    function DebounceOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    DebounceOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n    };\n    return DebounceOperator;\n}());\nvar DebounceSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(DebounceSubscriber, _super);\n    function DebounceSubscriber(destination, durationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.durationSelector = durationSelector;\n        _this.hasValue = false;\n        _this.durationSubscription = null;\n        return _this;\n    }\n    DebounceSubscriber.prototype._next = function (value) {\n        try {\n            var result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DebounceSubscriber.prototype._complete = function () {\n        this.emitValue();\n        this.destination.complete();\n    };\n    DebounceSubscriber.prototype._tryNext = function (value, duration) {\n        var subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = subscribeToResult(this, duration);\n        if (subscription && !subscription.closed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    };\n    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            var value = this.value;\n            var subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = null;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            this.value = null;\n            this.hasValue = false;\n            _super.prototype._next.call(this, value);\n        }\n    };\n    return DebounceSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */\n\nvar DebounceTimeOperator = /*@__PURE__*/ (function () {\n    function DebounceTimeOperator(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    DebounceTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    };\n    return DebounceTimeOperator;\n}());\nvar DebounceTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(DebounceTimeSubscriber, _super);\n    function DebounceTimeSubscriber(destination, dueTime, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.dueTime = dueTime;\n        _this.scheduler = scheduler;\n        _this.debouncedSubscription = null;\n        _this.lastValue = null;\n        _this.hasValue = false;\n        return _this;\n    }\n    DebounceTimeSubscriber.prototype._next = function (value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext$2, this.dueTime, this));\n    };\n    DebounceTimeSubscriber.prototype._complete = function () {\n        this.debouncedNext();\n        this.destination.complete();\n    };\n    DebounceTimeSubscriber.prototype.debouncedNext = function () {\n        this.clearDebounce();\n        if (this.hasValue) {\n            var lastValue = this.lastValue;\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    };\n    DebounceTimeSubscriber.prototype.clearDebounce = function () {\n        var debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    };\n    return DebounceTimeSubscriber;\n}(Subscriber));\nfunction dispatchNext$2(subscriber) {\n    subscriber.debouncedNext();\n}\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar DefaultIfEmptyOperator = /*@__PURE__*/ (function () {\n    function DefaultIfEmptyOperator(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n    };\n    return DefaultIfEmptyOperator;\n}());\nvar DefaultIfEmptySubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(DefaultIfEmptySubscriber, _super);\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\n        var _this = _super.call(this, destination) || this;\n        _this.defaultValue = defaultValue;\n        _this.isEmpty = true;\n        return _this;\n    }\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    };\n    DefaultIfEmptySubscriber.prototype._complete = function () {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    };\n    return DefaultIfEmptySubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n\n/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_Subscriber,_Notification PURE_IMPORTS_END */\nfunction delay(delay, scheduler) {\n    if (scheduler === void 0) {\n        scheduler = async;\n    }\n    var absoluteDelay = isDate(delay);\n    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };\n}\nvar DelayOperator = /*@__PURE__*/ (function () {\n    function DelayOperator(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    DelayOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    };\n    return DelayOperator;\n}());\nvar DelaySubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(DelaySubscriber, _super);\n    function DelaySubscriber(destination, delay, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.delay = delay;\n        _this.scheduler = scheduler;\n        _this.queue = [];\n        _this.active = false;\n        _this.errored = false;\n        return _this;\n    }\n    DelaySubscriber.dispatch = function (state) {\n        var source = state.source;\n        var queue = source.queue;\n        var scheduler = state.scheduler;\n        var destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay_1);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    };\n    DelaySubscriber.prototype._schedule = function (scheduler) {\n        this.active = true;\n        var destination = this.destination;\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    };\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\n        if (this.errored === true) {\n            return;\n        }\n        var scheduler = this.scheduler;\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    };\n    DelaySubscriber.prototype._next = function (value) {\n        this.scheduleNotification(Notification.createNext(value));\n    };\n    DelaySubscriber.prototype._error = function (err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    DelaySubscriber.prototype._complete = function () {\n        this.scheduleNotification(Notification.createComplete());\n        this.unsubscribe();\n    };\n    return DelaySubscriber;\n}(Subscriber));\nvar DelayMessage = /*@__PURE__*/ (function () {\n    function DelayMessage(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n    return DelayMessage;\n}());\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_Observable,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar DelayWhenOperator = /*@__PURE__*/ (function () {\n    function DelayWhenOperator(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    DelayWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    };\n    return DelayWhenOperator;\n}());\nvar DelayWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(DelayWhenSubscriber, _super);\n    function DelayWhenSubscriber(destination, delayDurationSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.delayDurationSelector = delayDurationSelector;\n        _this.completed = false;\n        _this.delayNotifierSubscriptions = [];\n        _this.index = 0;\n        return _this;\n    }\n    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        var value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        try {\n            var delayNotifier = this.delayDurationSelector(value, index);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DelayWhenSubscriber.prototype._complete = function () {\n        this.completed = true;\n        this.tryComplete();\n        this.unsubscribe();\n    };\n    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\n        subscription.unsubscribe();\n        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        if (subscriptionIdx !== -1) {\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n        }\n        return subscription.outerValue;\n    };\n    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\n        var notifierSubscription = subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            var destination = this.destination;\n            destination.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n    };\n    DelayWhenSubscriber.prototype.tryComplete = function () {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    };\n    return DelayWhenSubscriber;\n}(OuterSubscriber));\nvar SubscriptionDelayObservable = /*@__PURE__*/ (function (_super) {\n    __extends(SubscriptionDelayObservable, _super);\n    function SubscriptionDelayObservable(source, subscriptionDelay) {\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.subscriptionDelay = subscriptionDelay;\n        return _this;\n    }\n    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    };\n    return SubscriptionDelayObservable;\n}(Observable));\nvar SubscriptionDelaySubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SubscriptionDelaySubscriber, _super);\n    function SubscriptionDelaySubscriber(parent, source) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        _this.source = source;\n        _this.sourceSubscribed = false;\n        return _this;\n    }\n    SubscriptionDelaySubscriber.prototype._next = function (unused) {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype._error = function (err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    };\n    SubscriptionDelaySubscriber.prototype._complete = function () {\n        this.unsubscribe();\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    };\n    return SubscriptionDelaySubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar DeMaterializeOperator = /*@__PURE__*/ (function () {\n    function DeMaterializeOperator() {\n    }\n    DeMaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DeMaterializeSubscriber(subscriber));\n    };\n    return DeMaterializeOperator;\n}());\nvar DeMaterializeSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(DeMaterializeSubscriber, _super);\n    function DeMaterializeSubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    DeMaterializeSubscriber.prototype._next = function (value) {\n        value.observe(this.destination);\n    };\n    return DeMaterializeSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar DistinctOperator = /*@__PURE__*/ (function () {\n    function DistinctOperator(keySelector, flushes) {\n        this.keySelector = keySelector;\n        this.flushes = flushes;\n    }\n    DistinctOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    };\n    return DistinctOperator;\n}());\nvar DistinctSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(DistinctSubscriber, _super);\n    function DistinctSubscriber(destination, keySelector, flushes) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.values = new Set();\n        if (flushes) {\n            _this.add(subscribeToResult(_this, flushes));\n        }\n        return _this;\n    }\n    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values.clear();\n    };\n    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DistinctSubscriber.prototype._next = function (value) {\n        if (this.keySelector) {\n            this._useKeySelector(value);\n        }\n        else {\n            this._finalizeNext(value, value);\n        }\n    };\n    DistinctSubscriber.prototype._useKeySelector = function (value) {\n        var key;\n        var destination = this.destination;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this._finalizeNext(key, value);\n    };\n    DistinctSubscriber.prototype._finalizeNext = function (key, value) {\n        var values = this.values;\n        if (!values.has(key)) {\n            values.add(key);\n            this.destination.next(value);\n        }\n    };\n    return DistinctSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_util_tryCatch,_util_errorObject PURE_IMPORTS_END */\n\nvar DistinctUntilChangedOperator = /*@__PURE__*/ (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\nvar DistinctUntilChangedSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.keySelector = keySelector;\n        _this.hasKey = false;\n        if (typeof compare === 'function') {\n            _this.compare = compare;\n        }\n        return _this;\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch(this.keySelector)(value);\n            if (key === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch(this.compare)(this.key, key);\n            if (result === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _distinctUntilChanged PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\nfunction filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nvar FilterOperator = /*@__PURE__*/ (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\nvar FilterSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.count = 0;\n        return _this;\n    }\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_util_noop,_util_isFunction PURE_IMPORTS_END */\n\nvar DoOperator = /*@__PURE__*/ (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\nvar TapSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(TapSubscriber, _super);\n    function TapSubscriber(destination, observerOrNext, error, complete) {\n        var _this = _super.call(this, destination) || this;\n        _this._tapNext = noop;\n        _this._tapError = noop;\n        _this._tapComplete = noop;\n        _this._tapError = error || noop;\n        _this._tapComplete = complete || noop;\n        if (isFunction(observerOrNext)) {\n            _this._context = _this;\n            _this._tapNext = observerOrNext;\n        }\n        else if (observerOrNext) {\n            _this._context = observerOrNext;\n            _this._tapNext = observerOrNext.next || noop;\n            _this._tapError = observerOrNext.error || noop;\n            _this._tapComplete = observerOrNext.complete || noop;\n        }\n        return _this;\n    }\n    TapSubscriber.prototype._next = function (value) {\n        try {\n            this._tapNext.call(this._context, value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(value);\n    };\n    TapSubscriber.prototype._error = function (err) {\n        try {\n            this._tapError.call(this._context, err);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.error(err);\n    };\n    TapSubscriber.prototype._complete = function () {\n        try {\n            this._tapComplete.call(this._context);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        return this.destination.complete();\n    };\n    return TapSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _tap,_util_EmptyError PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\n\nvar TakeOperator = /*@__PURE__*/ (function () {\n    function TakeOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    };\n    return TakeOperator;\n}());\nvar TakeSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(TakeSubscriber, _super);\n    function TakeSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    TakeSubscriber.prototype._next = function (value) {\n        var total = this.total;\n        var count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    };\n    return TakeSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _util_ArgumentOutOfRangeError,_filter,_throwIfEmpty,_defaultIfEmpty,_take PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _observable_fromArray,_observable_scalar,_observable_empty,_observable_concat,_util_isScheduler PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar EveryOperator = /*@__PURE__*/ (function () {\n    function EveryOperator(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    EveryOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    };\n    return EveryOperator;\n}());\nvar EverySubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(EverySubscriber, _super);\n    function EverySubscriber(destination, predicate, thisArg, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.thisArg = thisArg;\n        _this.source = source;\n        _this.index = 0;\n        _this.thisArg = thisArg || _this;\n        return _this;\n    }\n    EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    };\n    EverySubscriber.prototype._next = function (value) {\n        var result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    };\n    EverySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return EverySubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar SwitchFirstOperator = /*@__PURE__*/ (function () {\n    function SwitchFirstOperator() {\n    }\n    SwitchFirstOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchFirstSubscriber(subscriber));\n    };\n    return SwitchFirstOperator;\n}());\nvar SwitchFirstSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SwitchFirstSubscriber, _super);\n    function SwitchFirstSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasCompleted = false;\n        _this.hasSubscription = false;\n        return _this;\n    }\n    SwitchFirstSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(subscribeToResult(this, value));\n        }\n    };\n    SwitchFirstSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    };\n    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return SwitchFirstSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */\n\nvar ExhauseMapOperator = /*@__PURE__*/ (function () {\n    function ExhauseMapOperator(project) {\n        this.project = project;\n    }\n    ExhauseMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n    };\n    return ExhauseMapOperator;\n}());\nvar ExhaustMapSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(ExhaustMapSubscriber, _super);\n    function ExhaustMapSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.hasSubscription = false;\n        _this.hasCompleted = false;\n        _this.index = 0;\n        return _this;\n    }\n    ExhaustMapSubscriber.prototype._next = function (value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    };\n    ExhaustMapSubscriber.prototype.tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.hasSubscription = true;\n        this._innerSub(result, value, index);\n    };\n    ExhaustMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        subscribeToResult(this, result, value, index, innerSubscriber);\n    };\n    ExhaustMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    };\n    ExhaustMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    ExhaustMapSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    ExhaustMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var destination = this.destination;\n        destination.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return ExhaustMapSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar ExpandOperator = /*@__PURE__*/ (function () {\n    function ExpandOperator(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    ExpandOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    };\n    return ExpandOperator;\n}());\nvar ExpandSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(ExpandSubscriber, _super);\n    function ExpandSubscriber(destination, project, concurrent, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.concurrent = concurrent;\n        _this.scheduler = scheduler;\n        _this.index = 0;\n        _this.active = 0;\n        _this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            _this.buffer = [];\n        }\n        return _this;\n    }\n    ExpandSubscriber.dispatch = function (arg) {\n        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;\n        subscriber.subscribeToProjection(result, value, index);\n    };\n    ExpandSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        var index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            var result = tryCatch(this.project)(value, index);\n            if (result === errorObject) {\n                destination.error(errorObject.e);\n            }\n            else if (!this.scheduler) {\n                this.subscribeToProjection(result, value, index);\n            }\n            else {\n                var state = { subscriber: this, result: result, value: value, index: index };\n                var destination_1 = this.destination;\n                destination_1.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n        this.active++;\n        var destination = this.destination;\n        destination.add(subscribeToResult(this, result, value, index));\n    };\n    ExpandSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    };\n    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._next(innerValue);\n    };\n    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        var destination = this.destination;\n        destination.remove(innerSub);\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return ExpandSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_Subscription PURE_IMPORTS_END */\n\nvar FinallyOperator = /*@__PURE__*/ (function () {\n    function FinallyOperator(callback) {\n        this.callback = callback;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    };\n    return FinallyOperator;\n}());\nvar FinallySubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, callback) {\n        var _this = _super.call(this, destination) || this;\n        _this.add(new Subscription(callback));\n        return _this;\n    }\n    return FinallySubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar FindValueOperator = /*@__PURE__*/ (function () {\n    function FindValueOperator(predicate, source, yieldIndex, thisArg) {\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n    }\n    FindValueOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    };\n    return FindValueOperator;\n}());\nvar FindValueSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(FindValueSubscriber, _super);\n    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.yieldIndex = yieldIndex;\n        _this.thisArg = thisArg;\n        _this.index = 0;\n        return _this;\n    }\n    FindValueSubscriber.prototype.notifyComplete = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n        this.unsubscribe();\n    };\n    FindValueSubscriber.prototype._next = function (value) {\n        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;\n        var index = this.index++;\n        try {\n            var result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    FindValueSubscriber.prototype._complete = function () {\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\n    };\n    return FindValueSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _operators_find PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _util_EmptyError,_filter,_take,_defaultIfEmpty,_throwIfEmpty,_util_identity PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar IgnoreElementsOperator = /*@__PURE__*/ (function () {\n    function IgnoreElementsOperator() {\n    }\n    IgnoreElementsOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n    };\n    return IgnoreElementsOperator;\n}());\nvar IgnoreElementsSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(IgnoreElementsSubscriber, _super);\n    function IgnoreElementsSubscriber() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    IgnoreElementsSubscriber.prototype._next = function (unused) {\n    };\n    return IgnoreElementsSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar IsEmptyOperator = /*@__PURE__*/ (function () {\n    function IsEmptyOperator() {\n    }\n    IsEmptyOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new IsEmptySubscriber(observer));\n    };\n    return IsEmptyOperator;\n}());\nvar IsEmptySubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(IsEmptySubscriber, _super);\n    function IsEmptySubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {\n        var destination = this.destination;\n        destination.next(isEmpty);\n        destination.complete();\n    };\n    IsEmptySubscriber.prototype._next = function (value) {\n        this.notifyComplete(false);\n    };\n    IsEmptySubscriber.prototype._complete = function () {\n        this.notifyComplete(true);\n    };\n    return IsEmptySubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError,_observable_empty PURE_IMPORTS_END */\n\nvar TakeLastOperator = /*@__PURE__*/ (function () {\n    function TakeLastOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    TakeLastOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n    };\n    return TakeLastOperator;\n}());\nvar TakeLastSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(TakeLastSubscriber, _super);\n    function TakeLastSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.ring = new Array();\n        _this.count = 0;\n        return _this;\n    }\n    TakeLastSubscriber.prototype._next = function (value) {\n        var ring = this.ring;\n        var total = this.total;\n        var count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            var index = count % total;\n            ring[index] = value;\n        }\n    };\n    TakeLastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var count = this.count;\n        if (count > 0) {\n            var total = this.count >= this.total ? this.total : this.count;\n            var ring = this.ring;\n            for (var i = 0; i < total; i++) {\n                var idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    };\n    return TakeLastSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _util_EmptyError,_filter,_takeLast,_throwIfEmpty,_defaultIfEmpty,_util_identity PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar MapToOperator = /*@__PURE__*/ (function () {\n    function MapToOperator(value) {\n        this.value = value;\n    }\n    MapToOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    };\n    return MapToOperator;\n}());\nvar MapToSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        var _this = _super.call(this, destination) || this;\n        _this.value = value;\n        return _this;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_Notification PURE_IMPORTS_END */\n\nvar MaterializeOperator = /*@__PURE__*/ (function () {\n    function MaterializeOperator() {\n    }\n    MaterializeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MaterializeSubscriber(subscriber));\n    };\n    return MaterializeOperator;\n}());\nvar MaterializeSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(MaterializeSubscriber, _super);\n    function MaterializeSubscriber(destination) {\n        return _super.call(this, destination) || this;\n    }\n    MaterializeSubscriber.prototype._next = function (value) {\n        this.destination.next(Notification.createNext(value));\n    };\n    MaterializeSubscriber.prototype._error = function (err) {\n        var destination = this.destination;\n        destination.next(Notification.createError(err));\n        destination.complete();\n    };\n    MaterializeSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        destination.next(Notification.createComplete());\n        destination.complete();\n    };\n    return MaterializeSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar ScanOperator = /*@__PURE__*/ (function () {\n    function ScanOperator(accumulator, seed, hasSeed) {\n        if (hasSeed === void 0) {\n            hasSeed = false;\n        }\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    };\n    return ScanOperator;\n}());\nvar ScanSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, _seed, hasSeed) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this._seed = _seed;\n        _this.hasSeed = hasSeed;\n        _this.index = 0;\n        return _this;\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.hasSeed = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var index = this.index++;\n        var result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _scan,_takeLast,_defaultIfEmpty,_util_pipe PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _observable_merge PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _mergeMap PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_util_tryCatch,_util_errorObject,_util_subscribeToResult,_OuterSubscriber,_InnerSubscriber PURE_IMPORTS_END */\n\nvar MergeScanOperator = /*@__PURE__*/ (function () {\n    function MergeScanOperator(accumulator, seed, concurrent) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    MergeScanOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n    };\n    return MergeScanOperator;\n}());\nvar MergeScanSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(MergeScanSubscriber, _super);\n    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n        var _this = _super.call(this, destination) || this;\n        _this.accumulator = accumulator;\n        _this.acc = acc;\n        _this.concurrent = concurrent;\n        _this.hasValue = false;\n        _this.hasCompleted = false;\n        _this.buffer = [];\n        _this.active = 0;\n        _this.index = 0;\n        return _this;\n    }\n    MergeScanSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var index = this.index++;\n            var ish = tryCatch(this.accumulator)(this.acc, value);\n            var destination = this.destination;\n            if (ish === errorObject) {\n                destination.error(errorObject.e);\n            }\n            else {\n                this.active++;\n                this._innerSub(ish, value, index);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\n        var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        subscribeToResult(this, ish, value, index, innerSubscriber);\n    };\n    MergeScanSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    };\n    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var destination = this.destination;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    };\n    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        var destination = this.destination;\n        destination.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    };\n    return MergeScanSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _observable_ConnectableObservable PURE_IMPORTS_END */\n\nvar MulticastOperator = /*@__PURE__*/ (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\n\n/** PURE_IMPORTS_START tslib,_observable_from,_util_isArray,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\n\nvar OnErrorResumeNextOperator = /*@__PURE__*/ (function () {\n    function OnErrorResumeNextOperator(nextSources) {\n        this.nextSources = nextSources;\n    }\n    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n    };\n    return OnErrorResumeNextOperator;\n}());\nvar OnErrorResumeNextSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(OnErrorResumeNextSubscriber, _super);\n    function OnErrorResumeNextSubscriber(destination, nextSources) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.nextSources = nextSources;\n        return _this;\n    }\n    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.subscribeToNextSource();\n    };\n    OnErrorResumeNextSubscriber.prototype._error = function (err) {\n        this.subscribeToNextSource();\n        this.unsubscribe();\n    };\n    OnErrorResumeNextSubscriber.prototype._complete = function () {\n        this.subscribeToNextSource();\n        this.unsubscribe();\n    };\n    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {\n        var next = this.nextSources.shift();\n        if (next) {\n            var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n            var destination = this.destination;\n            destination.add(innerSubscriber);\n            subscribeToResult(this, next, undefined, undefined, innerSubscriber);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return OnErrorResumeNextSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar PairwiseOperator = /*@__PURE__*/ (function () {\n    function PairwiseOperator() {\n    }\n    PairwiseOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    };\n    return PairwiseOperator;\n}());\nvar PairwiseSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(PairwiseSubscriber, _super);\n    function PairwiseSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasPrev = false;\n        return _this;\n    }\n    PairwiseSubscriber.prototype._next = function (value) {\n        if (this.hasPrev) {\n            this.destination.next([this.prev, value]);\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n    };\n    return PairwiseSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _util_not,_filter PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _map PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _Subject,_multicast PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _BehaviorSubject,_multicast PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _AsyncSubject,_multicast PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _ReplaySubject,_multicast PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _util_isArray,_observable_race PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_observable_empty PURE_IMPORTS_END */\n\nvar RepeatOperator = /*@__PURE__*/ (function () {\n    function RepeatOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RepeatOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n    };\n    return RepeatOperator;\n}());\nvar RepeatSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(RepeatSubscriber, _super);\n    function RepeatSubscriber(destination, count, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.count = count;\n        _this.source = source;\n        return _this;\n    }\n    RepeatSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.complete.call(this);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RepeatSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar RepeatWhenOperator = /*@__PURE__*/ (function () {\n    function RepeatWhenOperator(notifier) {\n        this.notifier = notifier;\n    }\n    RepeatWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    };\n    return RepeatWhenOperator;\n}());\nvar RepeatWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(RepeatWhenSubscriber, _super);\n    function RepeatWhenSubscriber(destination, notifier, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.source = source;\n        _this.sourceIsBeingSubscribedTo = true;\n        return _this;\n    }\n    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    };\n    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return _super.prototype.complete.call(this);\n        }\n    };\n    RepeatWhenSubscriber.prototype.complete = function () {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return _super.prototype.complete.call(this);\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next();\n        }\n    };\n    RepeatWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\n        var _unsubscribe = this._unsubscribe;\n        this._unsubscribe = null;\n        _super.prototype._unsubscribeAndRecycle.call(this);\n        this._unsubscribe = _unsubscribe;\n        return this;\n    };\n    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\n        this.notifications = new Subject();\n        var retries = tryCatch(this.notifier)(this.notifications);\n        if (retries === errorObject) {\n            return _super.prototype.complete.call(this);\n        }\n        this.retries = retries;\n        this.retriesSubscription = subscribeToResult(this, retries);\n    };\n    return RepeatWhenSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar RetryOperator = /*@__PURE__*/ (function () {\n    function RetryOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RetryOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    };\n    return RetryOperator;\n}());\nvar RetrySubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(RetrySubscriber, _super);\n    function RetrySubscriber(destination, count, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.count = count;\n        _this.source = source;\n        return _this;\n    }\n    RetrySubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.error.call(this, err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    };\n    return RetrySubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar RetryWhenOperator = /*@__PURE__*/ (function () {\n    function RetryWhenOperator(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    };\n    return RetryWhenOperator;\n}());\nvar RetryWhenSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(RetryWhenSubscriber, _super);\n    function RetryWhenSubscriber(destination, notifier, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.notifier = notifier;\n        _this.source = source;\n        return _this;\n    }\n    RetryWhenSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var errors = this.errors;\n            var retries = this.retries;\n            var retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject();\n                retries = tryCatch(this.notifier)(errors);\n                if (retries === errorObject) {\n                    return _super.prototype.error.call(this, errorObject.e);\n                }\n                retriesSubscription = subscribeToResult(this, retries);\n            }\n            else {\n                this.errors = null;\n                this.retriesSubscription = null;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    };\n    RetryWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _unsubscribe = this._unsubscribe;\n        this._unsubscribe = null;\n        this._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        this.source.subscribe(this);\n    };\n    return RetryWhenSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar SampleOperator = /*@__PURE__*/ (function () {\n    function SampleOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SampleOperator.prototype.call = function (subscriber, source) {\n        var sampleSubscriber = new SampleSubscriber(subscriber);\n        var subscription = source.subscribe(sampleSubscriber);\n        subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n        return subscription;\n    };\n    return SampleOperator;\n}());\nvar SampleSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SampleSubscriber, _super);\n    function SampleSubscriber() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.hasValue = false;\n        return _this;\n    }\n    SampleSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n    };\n    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    };\n    return SampleSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async PURE_IMPORTS_END */\n\nvar SampleTimeOperator = /*@__PURE__*/ (function () {\n    function SampleTimeOperator(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    SampleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    };\n    return SampleTimeOperator;\n}());\nvar SampleTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SampleTimeSubscriber, _super);\n    function SampleTimeSubscriber(destination, period, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.period = period;\n        _this.scheduler = scheduler;\n        _this.hasValue = false;\n        _this.add(scheduler.schedule(dispatchNotification, period, { subscriber: _this, period: period }));\n        return _this;\n    }\n    SampleTimeSubscriber.prototype._next = function (value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    };\n    SampleTimeSubscriber.prototype.notifyNext = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    };\n    return SampleTimeSubscriber;\n}(Subscriber));\nfunction dispatchNotification(state) {\n    var subscriber = state.subscriber, period = state.period;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_util_tryCatch,_util_errorObject PURE_IMPORTS_END */\n\nvar SequenceEqualOperator = /*@__PURE__*/ (function () {\n    function SequenceEqualOperator(compareTo, comparor) {\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n    }\n    SequenceEqualOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n    };\n    return SequenceEqualOperator;\n}());\nvar SequenceEqualSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SequenceEqualSubscriber, _super);\n    function SequenceEqualSubscriber(destination, compareTo, comparor) {\n        var _this = _super.call(this, destination) || this;\n        _this.compareTo = compareTo;\n        _this.comparor = comparor;\n        _this._a = [];\n        _this._b = [];\n        _this._oneComplete = false;\n        _this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));\n        return _this;\n    }\n    SequenceEqualSubscriber.prototype._next = function (value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    };\n    SequenceEqualSubscriber.prototype._complete = function () {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n        this.unsubscribe();\n    };\n    SequenceEqualSubscriber.prototype.checkValues = function () {\n        var _c = this, _a = _c._a, _b = _c._b, comparor = _c.comparor;\n        while (_a.length > 0 && _b.length > 0) {\n            var a = _a.shift();\n            var b = _b.shift();\n            var areEqual = false;\n            if (comparor) {\n                areEqual = tryCatch(comparor)(a, b);\n                if (areEqual === errorObject) {\n                    this.destination.error(errorObject.e);\n                }\n            }\n            else {\n                areEqual = a === b;\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    };\n    SequenceEqualSubscriber.prototype.emit = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    };\n    SequenceEqualSubscriber.prototype.nextB = function (value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    };\n    SequenceEqualSubscriber.prototype.completeB = function () {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    };\n    return SequenceEqualSubscriber;\n}(Subscriber));\nvar SequenceEqualCompareToSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SequenceEqualCompareToSubscriber, _super);\n    function SequenceEqualCompareToSubscriber(destination, parent) {\n        var _this = _super.call(this, destination) || this;\n        _this.parent = parent;\n        return _this;\n    }\n    SequenceEqualCompareToSubscriber.prototype._next = function (value) {\n        this.parent.nextB(value);\n    };\n    SequenceEqualCompareToSubscriber.prototype._error = function (err) {\n        this.parent.error(err);\n        this.unsubscribe();\n    };\n    SequenceEqualCompareToSubscriber.prototype._complete = function () {\n        this.parent.completeB();\n        this.unsubscribe();\n    };\n    return SequenceEqualCompareToSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _multicast,_refCount,_Subject PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _ReplaySubject PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_util_EmptyError PURE_IMPORTS_END */\n\nvar SingleOperator = /*@__PURE__*/ (function () {\n    function SingleOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    SingleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    };\n    return SingleOperator;\n}());\nvar SingleSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SingleSubscriber, _super);\n    function SingleSubscriber(destination, predicate, source) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.source = source;\n        _this.seenValue = false;\n        _this.index = 0;\n        return _this;\n    }\n    SingleSubscriber.prototype.applySingleValue = function (value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    };\n    SingleSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this.tryNext(value, index);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    };\n    SingleSubscriber.prototype.tryNext = function (value, index) {\n        try {\n            if (this.predicate(value, index, this.source)) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    SingleSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError);\n        }\n    };\n    return SingleSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar SkipOperator = /*@__PURE__*/ (function () {\n    function SkipOperator(total) {\n        this.total = total;\n    }\n    SkipOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    };\n    return SkipOperator;\n}());\nvar SkipSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SkipSubscriber, _super);\n    function SkipSubscriber(destination, total) {\n        var _this = _super.call(this, destination) || this;\n        _this.total = total;\n        _this.count = 0;\n        return _this;\n    }\n    SkipSubscriber.prototype._next = function (x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    };\n    return SkipSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_util_ArgumentOutOfRangeError PURE_IMPORTS_END */\n\nvar SkipLastOperator = /*@__PURE__*/ (function () {\n    function SkipLastOperator(_skipCount) {\n        this._skipCount = _skipCount;\n        if (this._skipCount < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    SkipLastOperator.prototype.call = function (subscriber, source) {\n        if (this._skipCount === 0) {\n            return source.subscribe(new Subscriber(subscriber));\n        }\n        else {\n            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n        }\n    };\n    return SkipLastOperator;\n}());\nvar SkipLastSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SkipLastSubscriber, _super);\n    function SkipLastSubscriber(destination, _skipCount) {\n        var _this = _super.call(this, destination) || this;\n        _this._skipCount = _skipCount;\n        _this._count = 0;\n        _this._ring = new Array(_skipCount);\n        return _this;\n    }\n    SkipLastSubscriber.prototype._next = function (value) {\n        var skipCount = this._skipCount;\n        var count = this._count++;\n        if (count < skipCount) {\n            this._ring[count] = value;\n        }\n        else {\n            var currentIndex = count % skipCount;\n            var ring = this._ring;\n            var oldValue = ring[currentIndex];\n            ring[currentIndex] = value;\n            this.destination.next(oldValue);\n        }\n    };\n    return SkipLastSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar SkipUntilOperator = /*@__PURE__*/ (function () {\n    function SkipUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SkipUntilOperator.prototype.call = function (destination, source) {\n        return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n    };\n    return SkipUntilOperator;\n}());\nvar SkipUntilSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SkipUntilSubscriber, _super);\n    function SkipUntilSubscriber(destination, notifier) {\n        var _this = _super.call(this, destination) || this;\n        _this.hasValue = false;\n        var innerSubscriber = new InnerSubscriber(_this, undefined, undefined);\n        _this.add(innerSubscriber);\n        _this.innerSubscription = innerSubscriber;\n        subscribeToResult(_this, notifier, undefined, undefined, innerSubscriber);\n        return _this;\n    }\n    SkipUntilSubscriber.prototype._next = function (value) {\n        if (this.hasValue) {\n            _super.prototype._next.call(this, value);\n        }\n    };\n    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.hasValue = true;\n        if (this.innerSubscription) {\n            this.innerSubscription.unsubscribe();\n        }\n    };\n    SkipUntilSubscriber.prototype.notifyComplete = function () {\n    };\n    return SkipUntilSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar SkipWhileOperator = /*@__PURE__*/ (function () {\n    function SkipWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    SkipWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    };\n    return SkipWhileOperator;\n}());\nvar SkipWhileSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SkipWhileSubscriber, _super);\n    function SkipWhileSubscriber(destination, predicate) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.skipping = true;\n        _this.index = 0;\n        return _this;\n    }\n    SkipWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    };\n    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {\n        try {\n            var result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    return SkipWhileSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START _observable_fromArray,_observable_scalar,_observable_empty,_observable_concat,_util_isScheduler PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Observable,_scheduler_asap,_util_isNumeric PURE_IMPORTS_END */\nvar SubscribeOnObservable = /*@__PURE__*/ (function (_super) {\n    __extends(SubscribeOnObservable, _super);\n    function SubscribeOnObservable(source, delayTime, scheduler) {\n        if (delayTime === void 0) {\n            delayTime = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = asap;\n        }\n        var _this = _super.call(this) || this;\n        _this.source = source;\n        _this.delayTime = delayTime;\n        _this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            _this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            _this.scheduler = asap;\n        }\n        return _this;\n    }\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = asap;\n        }\n        return new SubscribeOnObservable(source, delay, scheduler);\n    };\n    SubscribeOnObservable.dispatch = function (arg) {\n        var source = arg.source, subscriber = arg.subscriber;\n        return this.add(source.subscribe(subscriber));\n    };\n    SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n        var delay = this.delayTime;\n        var source = this.source;\n        var scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source: source, subscriber: subscriber\n        });\n    };\n    return SubscribeOnObservable;\n}(Observable));\n\n/** PURE_IMPORTS_START _observable_SubscribeOnObservable PURE_IMPORTS_END */\n\nvar SubscribeOnOperator = /*@__PURE__*/ (function () {\n    function SubscribeOnOperator(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    SubscribeOnOperator.prototype.call = function (subscriber, source) {\n        return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    };\n    return SubscribeOnOperator;\n}());\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_InnerSubscriber,_util_subscribeToResult,_map,_observable_from PURE_IMPORTS_END */\n\nvar SwitchMapOperator = /*@__PURE__*/ (function () {\n    function SwitchMapOperator(project) {\n        this.project = project;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n    };\n    return SwitchMapOperator;\n}());\nvar SwitchMapSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.project = project;\n        _this.index = 0;\n        return _this;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        var innerSubscriber = new InnerSubscriber(this, undefined, undefined);\n        var destination = this.destination;\n        destination.add(innerSubscriber);\n        this.innerSubscription = subscribeToResult(this, result, value, index, innerSubscriber);\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.closed) {\n            _super.prototype._complete.call(this);\n        }\n        this.unsubscribe();\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var destination = this.destination;\n        destination.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _switchMap,_util_identity PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _switchMap PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar TakeUntilOperator = /*@__PURE__*/ (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        var notifierSubscription = subscribeToResult(takeUntilSubscriber, this.notifier);\n        if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    };\n    return TakeUntilOperator;\n}());\nvar TakeUntilSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.seenValue = false;\n        return _this;\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.seenValue = true;\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\n\nvar TakeWhileOperator = /*@__PURE__*/ (function () {\n    function TakeWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    TakeWhileOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n    };\n    return TakeWhileOperator;\n}());\nvar TakeWhileSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(TakeWhileSubscriber, _super);\n    function TakeWhileSubscriber(destination, predicate) {\n        var _this = _super.call(this, destination) || this;\n        _this.predicate = predicate;\n        _this.index = 0;\n        return _this;\n    }\n    TakeWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        var result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    };\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n        var destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            destination.complete();\n        }\n    };\n    return TakeWhileSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\n\nvar ThrottleOperator = /*@__PURE__*/ (function () {\n    function ThrottleOperator(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    };\n    return ThrottleOperator;\n}());\nvar ThrottleSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(ThrottleSubscriber, _super);\n    function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.durationSelector = durationSelector;\n        _this._leading = _leading;\n        _this._trailing = _trailing;\n        _this._hasValue = false;\n        return _this;\n    }\n    ThrottleSubscriber.prototype._next = function (value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    };\n    ThrottleSubscriber.prototype.send = function () {\n        var _a = this, _hasValue = _a._hasValue, _sendValue = _a._sendValue;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = null;\n    };\n    ThrottleSubscriber.prototype.throttle = function (value) {\n        var duration = this.tryDurationSelector(value);\n        if (duration) {\n            this.add(this._throttled = subscribeToResult(this, duration));\n        }\n    };\n    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    };\n    ThrottleSubscriber.prototype.throttlingDone = function () {\n        var _a = this, _throttled = _a._throttled, _trailing = _a._trailing;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = null;\n        if (_trailing) {\n            this.send();\n        }\n    };\n    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.throttlingDone();\n    };\n    ThrottleSubscriber.prototype.notifyComplete = function () {\n        this.throttlingDone();\n    };\n    return ThrottleSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_scheduler_async,_throttle PURE_IMPORTS_END */\n\nvar ThrottleTimeOperator = /*@__PURE__*/ (function () {\n    function ThrottleTimeOperator(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    ThrottleTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    };\n    return ThrottleTimeOperator;\n}());\nvar ThrottleTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(ThrottleTimeSubscriber, _super);\n    function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {\n        var _this = _super.call(this, destination) || this;\n        _this.duration = duration;\n        _this.scheduler = scheduler;\n        _this.leading = leading;\n        _this.trailing = trailing;\n        _this._hasTrailingValue = false;\n        _this._trailingValue = null;\n        return _this;\n    }\n    ThrottleTimeSubscriber.prototype._next = function (value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext$3, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n        }\n    };\n    ThrottleTimeSubscriber.prototype._complete = function () {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ThrottleTimeSubscriber.prototype.clearThrottle = function () {\n        var throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    };\n    return ThrottleTimeSubscriber;\n}(Subscriber));\nfunction dispatchNext$3(arg) {\n    var subscriber = arg.subscriber;\n    subscriber.clearThrottle();\n}\n\n/** PURE_IMPORTS_START _scheduler_async,_scan,_observable_defer,_map PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_scheduler_async,_util_isDate,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar TimeoutWithOperator = /*@__PURE__*/ (function () {\n    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n    }\n    TimeoutWithOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    };\n    return TimeoutWithOperator;\n}());\nvar TimeoutWithSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(TimeoutWithSubscriber, _super);\n    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.absoluteTimeout = absoluteTimeout;\n        _this.waitFor = waitFor;\n        _this.withObservable = withObservable;\n        _this.scheduler = scheduler;\n        _this.action = null;\n        _this.scheduleTimeout();\n        return _this;\n    }\n    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {\n        var withObservable = subscriber.withObservable;\n        subscriber._unsubscribeAndRecycle();\n        subscriber.add(subscribeToResult(subscriber, withObservable));\n    };\n    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {\n        var action = this.action;\n        if (action) {\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    };\n    TimeoutWithSubscriber.prototype._next = function (value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        _super.prototype._next.call(this, value);\n    };\n    TimeoutWithSubscriber.prototype._unsubscribe = function () {\n        this.action = null;\n        this.scheduler = null;\n        this.withObservable = null;\n    };\n    return TimeoutWithSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _scheduler_async,_util_TimeoutError,_timeoutWith,_observable_throwError PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _scheduler_async,_map PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START tslib,_Subject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar WindowOperator = /*@__PURE__*/ (function () {\n    function WindowOperator(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        var windowSubscriber = new WindowSubscriber(subscriber);\n        var sourceSubscription = source.subscribe(windowSubscriber);\n        if (!sourceSubscription.closed) {\n            windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n        }\n        return sourceSubscription;\n    };\n    return WindowOperator;\n}());\nvar WindowSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.window = new Subject();\n        destination.next(_this.window);\n        return _this;\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow();\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this._complete();\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n    };\n    WindowSubscriber.prototype._unsubscribe = function () {\n        this.window = null;\n    };\n    WindowSubscriber.prototype.openWindow = function () {\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var destination = this.destination;\n        var newWindow = this.window = new Subject();\n        destination.next(newWindow);\n    };\n    return WindowSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subscriber,_Subject PURE_IMPORTS_END */\n\nvar WindowCountOperator = /*@__PURE__*/ (function () {\n    function WindowCountOperator(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    WindowCountOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    };\n    return WindowCountOperator;\n}());\nvar WindowCountSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(WindowCountSubscriber, _super);\n    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.windowSize = windowSize;\n        _this.startWindowEvery = startWindowEvery;\n        _this.windows = [new Subject()];\n        _this.count = 0;\n        destination.next(_this.windows[0]);\n        return _this;\n    }\n    WindowCountSubscriber.prototype._next = function (value) {\n        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        var destination = this.destination;\n        var windowSize = this.windowSize;\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        var c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            var window_1 = new Subject();\n            windows.push(window_1);\n            destination.next(window_1);\n        }\n    };\n    WindowCountSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    };\n    WindowCountSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowCountSubscriber.prototype._unsubscribe = function () {\n        this.count = 0;\n        this.windows = null;\n    };\n    return WindowCountSubscriber;\n}(Subscriber));\n\n/** PURE_IMPORTS_START tslib,_Subject,_scheduler_async,_Subscriber,_util_isNumeric,_util_isScheduler PURE_IMPORTS_END */\n\nvar WindowTimeOperator = /*@__PURE__*/ (function () {\n    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n    }\n    WindowTimeOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    };\n    return WindowTimeOperator;\n}());\nvar CountedSubject = /*@__PURE__*/ (function (_super) {\n    __extends(CountedSubject, _super);\n    function CountedSubject() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._numberOfNextedValues = 0;\n        return _this;\n    }\n    CountedSubject.prototype.next = function (value) {\n        this._numberOfNextedValues++;\n        _super.prototype.next.call(this, value);\n    };\n    Object.defineProperty(CountedSubject.prototype, \"numberOfNextedValues\", {\n        get: function () {\n            return this._numberOfNextedValues;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CountedSubject;\n}(Subject));\nvar WindowTimeSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(WindowTimeSubscriber, _super);\n    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.windowTimeSpan = windowTimeSpan;\n        _this.windowCreationInterval = windowCreationInterval;\n        _this.maxWindowSize = maxWindowSize;\n        _this.scheduler = scheduler;\n        _this.windows = [];\n        var window = _this.openWindow();\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            var closeState = { subscriber: _this, window: window, context: null };\n            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: _this, scheduler: scheduler };\n            _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            var timeSpanOnlyState = { subscriber: _this, window: window, windowTimeSpan: windowTimeSpan };\n            _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n        return _this;\n    }\n    WindowTimeSubscriber.prototype._next = function (value) {\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len; i++) {\n            var window_1 = windows[i];\n            if (!window_1.closed) {\n                window_1.next(value);\n                if (window_1.numberOfNextedValues >= this.maxWindowSize) {\n                    this.closeWindow(window_1);\n                }\n            }\n        }\n    };\n    WindowTimeSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    };\n    WindowTimeSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            var window_2 = windows.shift();\n            if (!window_2.closed) {\n                window_2.complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowTimeSubscriber.prototype.openWindow = function () {\n        var window = new CountedSubject();\n        this.windows.push(window);\n        var destination = this.destination;\n        destination.next(window);\n        return window;\n    };\n    WindowTimeSubscriber.prototype.closeWindow = function (window) {\n        window.complete();\n        var windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    };\n    return WindowTimeSubscriber;\n}(Subscriber));\nfunction dispatchWindowTimeSpanOnly(state) {\n    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;\n    if (window) {\n        subscriber.closeWindow(window);\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;\n    var window = subscriber.openWindow();\n    var action = this;\n    var context = { action: action, subscription: null };\n    var timeSpanState = { subscriber: subscriber, window: window, context: context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n    var subscriber = state.subscriber, window = state.window, context = state.context;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n\n/** PURE_IMPORTS_START tslib,_Subject,_Subscription,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar WindowToggleOperator = /*@__PURE__*/ (function () {\n    function WindowToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    WindowToggleOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return WindowToggleOperator;\n}());\nvar WindowToggleSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(WindowToggleSubscriber, _super);\n    function WindowToggleSubscriber(destination, openings, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.openings = openings;\n        _this.closingSelector = closingSelector;\n        _this.contexts = [];\n        _this.add(_this.openSubscription = subscribeToResult(_this, openings, openings));\n        return _this;\n    }\n    WindowToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        if (contexts) {\n            var len = contexts.length;\n            for (var i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_1 = contexts[index];\n                context_1.window.error(err);\n                context_1.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._error.call(this, err);\n    };\n    WindowToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_2 = contexts[index];\n                context_2.window.complete();\n                context_2.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    WindowToggleSubscriber.prototype._unsubscribe = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context_3 = contexts[index];\n                context_3.window.unsubscribe();\n                context_3.subscription.unsubscribe();\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = tryCatch(closingSelector)(innerValue);\n            if (closingNotifier === errorObject) {\n                return this.error(errorObject.e);\n            }\n            else {\n                var window_1 = new Subject();\n                var subscription = new Subscription();\n                var context_4 = { window: window_1, subscription: subscription };\n                this.contexts.push(context_4);\n                var innerSubscription = subscribeToResult(this, closingNotifier, context_4);\n                if (innerSubscription.closed) {\n                    this.closeWindow(this.contexts.length - 1);\n                }\n                else {\n                    innerSubscription.context = context_4;\n                    subscription.add(innerSubscription);\n                }\n                this.destination.next(window_1);\n            }\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyError = function (err) {\n        this.error(err);\n    };\n    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    };\n    WindowToggleSubscriber.prototype.closeWindow = function (index) {\n        if (index === -1) {\n            return;\n        }\n        var contexts = this.contexts;\n        var context = contexts[index];\n        var window = context.window, subscription = context.subscription;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    };\n    return WindowToggleSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_Subject,_util_tryCatch,_util_errorObject,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar WindowOperator$1 = /*@__PURE__*/ (function () {\n    function WindowOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WindowSubscriber$1(subscriber, this.closingSelector));\n    };\n    return WindowOperator;\n}());\nvar WindowSubscriber$1 = /*@__PURE__*/ (function (_super) {\n    __extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination, closingSelector) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        _this.closingSelector = closingSelector;\n        _this.openWindow();\n        return _this;\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    };\n    WindowSubscriber.prototype.openWindow = function (innerSub) {\n        if (innerSub === void 0) {\n            innerSub = null;\n        }\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var window = this.window = new Subject();\n        this.destination.next(window);\n        var closingNotifier = tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject) {\n            var err = errorObject.e;\n            this.destination.error(err);\n            this.window.error(err);\n        }\n        else {\n            this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n        }\n    };\n    return WindowSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\n\nvar WithLatestFromOperator = /*@__PURE__*/ (function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}());\nvar WithLatestFromSubscriber = /*@__PURE__*/ (function (_super) {\n    __extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        var _this = _super.call(this, destination) || this;\n        _this.observables = observables;\n        _this.project = project;\n        _this.toRespond = [];\n        var len = observables.length;\n        _this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            _this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            _this.add(subscribeToResult(_this, observable, observable, i));\n        }\n        return _this;\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber));\n\n/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START _observable_zip PURE_IMPORTS_END */\n\n/** PURE_IMPORTS_START  PURE_IMPORTS_END */\n\n/**\n * @license ngx-store\n * ISC license\n */\n\nvar isEqual = require('lodash.isequal');\nvar CacheItem = /** @class */ (function () {\n    function CacheItem(cacheItem) {\n        this.name = '';\n        this.targets = [];\n        this.services = [];\n        this.utilities = [];\n        this.proxy = null;\n        this._key = '';\n        this.initializedTargets = new Set();\n        this._key = cacheItem.key;\n        this.name = cacheItem.name;\n        this.addTargets(cacheItem.targets);\n        this.addServices(cacheItem.services);\n        this.addUtilities(cacheItem.utilities);\n    }\n    Object.defineProperty(CacheItem.prototype, \"key\", {\n        get: function () {\n            return this._key;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CacheItem.prototype.saveValue = function (value, config, source) {\n        if (config === void 0) { config = {}; }\n        debug.groupCollapsed('CacheItem#saveValue for ' + this.key + ' in ' + this.currentTarget.constructor.name);\n        debug.log('new value: ', value);\n        debug.log('previous value: ', this.readValue());\n        debug.log('targets.length: ', this.targets.length);\n        debug.log('currentTarget:', this.currentTarget);\n        debug.groupEnd();\n        // prevent overwriting value by initializators\n        if (!this.initializedTargets.has(this.currentTarget)) {\n            this.initializedTargets.add(this.currentTarget);\n            var readValue = this.readValue();\n            var savedValue = (readValue !== null && readValue !== undefined) ? readValue : value;\n            var proxy = this.getProxy(savedValue, config);\n            proxy = (proxy !== null) ? proxy : value;\n            debug.log('initial value for ' + this.key + ' in ' + this.currentTarget.constructor.name, proxy);\n            this.propagateChange(savedValue, source);\n            return proxy;\n        }\n        this.propagateChange(value, source);\n        return this.getProxy(value, config);\n    };\n    CacheItem.prototype.getProxy = function (value, config) {\n        if (config === void 0) { config = {}; }\n        if (value === undefined && this.proxy)\n            return this.proxy; // return cached proxy if value hasn't changed\n        value = (value === undefined) ? this.readValue() : value;\n        if (typeof value !== 'object' || value === null) {\n            this.proxy = value;\n            return value;\n        }\n        if ((!Config.mutateObjects && !config.mutate) || config.mutate === false)\n            return value;\n        var _self = this; // alias to use in standard function expressions\n        var prototype = Object.assign(new value.constructor(), value.__proto__);\n        prototype.save = function () {\n            _self.saveValue(value, config);\n        };\n        // TODO set prototype for Array.prototype or something\n        if (Array.isArray(value)) { // handle methods that could change value of array\n            var methodsToOverwrite = [\n                'pop', 'push', 'reverse', 'shift', 'unshift', 'splice',\n                'filter', 'forEach', 'map', 'fill', 'sort', 'copyWithin'\n            ];\n            var _loop_1 = function (method) {\n                prototype[method] = function () {\n                    var readValue = _self.readValue();\n                    var result = Array.prototype[method].apply(readValue, arguments);\n                    debug.log('Saving value for ' + _self.key + ' by method ' + prototype.constructor.name + '.' + method);\n                    _self.saveValue(readValue, config);\n                    return result;\n                };\n            };\n            for (var _i = 0, methodsToOverwrite_1 = methodsToOverwrite; _i < methodsToOverwrite_1.length; _i++) {\n                var method = methodsToOverwrite_1[_i];\n                _loop_1(method);\n            }\n        }\n        Object.setPrototypeOf(value, prototype);\n        this.proxy = value;\n        return value;\n    };\n    CacheItem.prototype.readValue = function (config) {\n        if (config === void 0) { config = {}; }\n        var entry = this.utilities[0];\n        var value = entry ? entry.utility.get(this.key, entry.config) : null;\n        return (typeof value !== 'object') ? value : JSON.parse(JSON.stringify(this.getProxy(value, entry.config)));\n    };\n    CacheItem.prototype.addTargets = function (targets) {\n        var _this = this;\n        targets.forEach(function (target) {\n            if (_this.targets.indexOf(target) === -1) {\n                if (typeof target === 'object') { // handle Angular Component destruction\n                    var originalFunction_1 = target.ngOnDestroy;\n                    var _self_1 = _this;\n                    target.ngOnDestroy = function () {\n                        if (typeof originalFunction_1 === 'function') {\n                            originalFunction_1.apply(this, arguments);\n                        }\n                        target.ngOnDestroy = originalFunction_1 || function () { };\n                        _self_1.initializedTargets.delete(target);\n                        _self_1.targets = _self_1.targets.filter(function (t) { return t !== target; });\n                        if (!_self_1.targets.length) {\n                            _self_1.services.forEach(function (service) {\n                                service.keys = service.keys.filter(function (key) { return key !== _self_1._key; });\n                            });\n                            _self_1.resetProxy();\n                            Cache.remove(_self_1);\n                        }\n                        debug.groupCollapsed(_self_1.key + \" OnDestroy handler:\");\n                        debug.log('removed target:', target.constructor.name);\n                        debug.log('remaining targets:', _self_1.targets);\n                        debug.log('cacheItem:', Cache.get(_self_1.key));\n                        debug.groupEnd();\n                    };\n                    _this.targets.push(target);\n                }\n            }\n        });\n    };\n    CacheItem.prototype.addServices = function (services) {\n        var _this = this;\n        services.forEach(function (service) {\n            if (_this.services.indexOf(service) === -1) {\n                service.keys.push(_this._key);\n                _this.services.push(service);\n            }\n        });\n    };\n    CacheItem.prototype.addUtilities = function (utilityEntries) {\n        var _this = this;\n        utilityEntries.forEach(function (entry) {\n            if (_this.utilities.findIndex(function (e) { return e.utility === entry.utility; }) === -1) {\n                _this.utilities.push(entry);\n                entry.utility.set(_this.key, _this.readValue());\n            }\n        });\n    };\n    CacheItem.prototype.resetProxy = function () {\n        this.proxy = null;\n    };\n    CacheItem.prototype.propagateChange = function (value, source) {\n        var _this = this;\n        if (isEqual(value, this.readValue()))\n            return;\n        this.utilities.forEach(function (entry) {\n            var utility = entry.utility;\n            // updating service which the change came from would affect in a cycle\n            if (utility === source)\n                return;\n            debug.log(\"propagating change on \" + _this.key + \" to:\", utility);\n            utility.set(_this._key, value, entry.config);\n        });\n    };\n    return CacheItem;\n}());\n\nvar Cache = /** @class */ (function () {\n    function Cache() {\n    }\n    Cache.getCacheFor = function (cacheCandidate) {\n        var cacheItem = Cache.get(cacheCandidate.key);\n        if (!cacheItem) {\n            cacheItem = new CacheItem(cacheCandidate);\n            debug.log(\"Created new CacheItem for \" + cacheCandidate.name + \" for \" + cacheItem.utilities[0].utility.getStorageName());\n            Cache.set(cacheItem);\n            return cacheItem;\n        }\n        debug.log(\"Loaded prior CacheItem of \" + cacheItem.name + \" for \" + cacheCandidate.utilities[0].utility.getStorageName());\n        cacheItem.addTargets(cacheCandidate.targets);\n        cacheItem.addServices(cacheCandidate.services);\n        cacheItem.addUtilities(cacheCandidate.utilities);\n        Cache.set(cacheItem);\n        return cacheItem;\n    };\n    Cache.remove = function (cacheItem) {\n        return Cache.items.delete(cacheItem.key);\n    };\n    Cache.get = function (key) {\n        return Cache.items.get(key);\n    };\n    Cache.set = function (cacheItem) {\n        if (!Cache.get(cacheItem.key)) {\n            debug.log('CacheItem for ' + cacheItem.key, cacheItem);\n        }\n        Cache.items.set(cacheItem.key, cacheItem);\n    };\n    Cache.items = new Map();\n    return Cache;\n}());\n\nvar NgxStorageEvent = /** @class */ (function () {\n    function NgxStorageEvent(type, key, storageArea) {\n        this.type = type;\n        this.key = key;\n        this.storageArea = storageArea;\n        this.timeStamp = (Date.now() - NgxStorageEvent.initTimeStamp);\n        this.bubbles = false;\n        this.cancelBubble = false;\n        this.cancelable = false;\n        this.composed = false;\n        this.currentTarget = window;\n        this.defaultPrevented = false;\n        this.eventPhase = 2;\n        this.isTrusted = true;\n        this.path = [window];\n        this.returnValue = true;\n        this.srcElement = window;\n        this.target = window;\n        this.url = window.location.href;\n        this.isInternal = true;\n    }\n    Object.defineProperty(NgxStorageEvent.prototype, \"initEvent\", {\n        /**\n         * Methods below exist only to satisfy TypeScript compiler\n         */\n        get: function () {\n            return StorageEvent.prototype.initEvent.bind(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgxStorageEvent.prototype, \"preventDefault\", {\n        get: function () {\n            return StorageEvent.prototype.preventDefault.bind(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgxStorageEvent.prototype, \"stopImmediatePropagation\", {\n        get: function () {\n            return StorageEvent.prototype.stopImmediatePropagation.bind(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgxStorageEvent.prototype, \"stopPropagation\", {\n        get: function () {\n            return StorageEvent.prototype.stopPropagation.bind(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgxStorageEvent.prototype, \"composedPath\", {\n        get: function () {\n            return StorageEvent.prototype.composedPath.bind(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgxStorageEvent.prototype, \"AT_TARGET\", {\n        get: function () {\n            return StorageEvent.prototype.AT_TARGET;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgxStorageEvent.prototype, \"BUBBLING_PHASE\", {\n        get: function () {\n            return StorageEvent.prototype.BUBBLING_PHASE;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgxStorageEvent.prototype, \"CAPTURING_PHASE\", {\n        get: function () {\n            return StorageEvent.prototype.BUBBLING_PHASE;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgxStorageEvent.initTimeStamp = Date.now();\n    return NgxStorageEvent;\n}());\n\nvar WebStorageUtility = /** @class */ (function () {\n    function WebStorageUtility(storage, prefix, previousPrefix) {\n        var _this = this;\n        this._prefix = '';\n        this._changes = new Subject();\n        this._storage = storage;\n        this._prefix = prefix;\n        // handle previousPrefix for backward-compatibility and safe config changes below\n        if (prefix === previousPrefix)\n            return;\n        if (previousPrefix === null)\n            return;\n        if (previousPrefix === undefined)\n            return;\n        debug.log(this.getStorageName() + ' > Detected prefix change from ' + previousPrefix + ' to ' + prefix);\n        this.forEach(function (value, key) {\n            // ignore config settings when previousPrefix = ''\n            if (key.startsWith(previousPrefix) && !key.startsWith(CONFIG_PREFIX)) {\n                var nameWithoutPrefix = _this.trimPrefix(key);\n                _this.set(nameWithoutPrefix, _this._storage.getItem(key));\n                if (previousPrefix !== '') {\n                    _this._storage.removeItem(key);\n                }\n            }\n        });\n    }\n    WebStorageUtility.getSettable = function (value) {\n        return JSON.stringify(value);\n    };\n    WebStorageUtility.getGettable = function (value) {\n        if (value === 'undefined')\n            return null;\n        try {\n            return JSON.parse(value);\n        }\n        catch (e) {\n            return value;\n        }\n    };\n    Object.defineProperty(WebStorageUtility.prototype, \"prefix\", {\n        get: function () {\n            return this._prefix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WebStorageUtility.prototype, \"keys\", {\n        get: function () {\n            var keys = [];\n            this.forEach(function (value, key) { return keys.push(key); });\n            return keys;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WebStorageUtility.prototype, \"changes\", {\n        get: function () {\n            return this._changes.asObservable();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WebStorageUtility.prototype.getStorage = function () {\n        return this._storage;\n    };\n    WebStorageUtility.prototype.getStorageKey = function (key, prefix) {\n        prefix = (typeof prefix === 'string') ? prefix : this.prefix;\n        return \"\" + prefix + key;\n    };\n    WebStorageUtility.prototype.getStorageName = function () {\n        return this._storage.type || ((this._storage === localStorage) ? 'localStorage' : 'sessionStorage');\n    };\n    WebStorageUtility.prototype.get = function (key, config) {\n        if (config === void 0) { config = {}; }\n        var storageKey = this.getStorageKey(key, config.prefix);\n        var value = this._storage.getItem(storageKey);\n        return this.getGettable(value);\n    };\n    WebStorageUtility.prototype.set = function (key, value, config) {\n        if (config === void 0) { config = {}; }\n        if (value === null || value === undefined) {\n            this.remove(key);\n            return null;\n        }\n        try {\n            var storageKey = this.getStorageKey(key, config.prefix);\n            var storable = this.getSettable(value);\n            this.emitEvent(key, value);\n            this._storage.setItem(storageKey, storable, config.expires);\n            var cacheItem = Cache.get(key);\n            if (cacheItem) {\n                debug.log(\"updating following CacheItem from \" + this.constructor.name + \":\", cacheItem);\n                cacheItem.resetProxy();\n                cacheItem.propagateChange(value, this);\n            }\n        }\n        catch (error) {\n            console.warn(\"[ngx-store] \" + this.getStorageName() + \": following error occurred while trying to save \" + key + \" =\", value);\n            console.error(error);\n        }\n        return value;\n    };\n    // TODO return true if item existed and false otherwise (?)\n    WebStorageUtility.prototype.remove = function (key, config) {\n        if (config === void 0) { config = {}; }\n        var storageKey = this.getStorageKey(key, config.prefix);\n        this._storage.removeItem(storageKey);\n        var cacheItem = Cache.get(key);\n        if (cacheItem) {\n            cacheItem.resetProxy();\n        }\n    };\n    WebStorageUtility.prototype.clear = function () {\n        var _this = this;\n        this.emitEvent(null, null, null);\n        this.forEach(function (value, key) {\n            if (key.startsWith(CONFIG_PREFIX))\n                return;\n            _this.remove(key, { prefix: '' });\n        });\n    };\n    WebStorageUtility.prototype.forEach = function (callbackFn) {\n        var _this = this;\n        if (typeof this._storage.forEach === 'function') {\n            return this._storage.forEach(function (value, key) {\n                callbackFn(_this.getGettable(value), key);\n            });\n        }\n        Object.keys(this._storage).forEach(function (key) {\n            callbackFn(_this.getGettable(_this._storage[key]), key);\n        });\n    };\n    WebStorageUtility.prototype.getSettable = function (value) {\n        return WebStorageUtility.getSettable(value);\n    };\n    WebStorageUtility.prototype.getGettable = function (value) {\n        return WebStorageUtility.getGettable(value);\n    };\n    WebStorageUtility.prototype.trimPrefix = function (key) {\n        return key.replace(this.prefix, '');\n    };\n    WebStorageUtility.prototype.emitEvent = function (key, newValue, oldValue) {\n        var event = new NgxStorageEvent(this.getStorageName(), key, this._storage);\n        event.oldValue = (oldValue !== undefined) ? oldValue : this.get(key);\n        event.newValue = newValue;\n        this._changes.next(event);\n    };\n    return WebStorageUtility;\n}());\n\nvar CONFIG_PREFIX = 'NGX-STORE_';\nvar ConfigHelper = /** @class */ (function () {\n    function ConfigHelper() {\n    }\n    ConfigHelper.getItem = function (key) {\n        return ConfigHelper._webStorageUtility.get(key);\n    };\n    ConfigHelper.setItem = function (key, item) {\n        return ConfigHelper._webStorageUtility.set(key, item);\n    };\n    ConfigHelper._webStorageUtility = new WebStorageUtility(localStorage, CONFIG_PREFIX);\n    return ConfigHelper;\n}());\n\nvar DefaultConfig = {\n    prefix: 'ngx_',\n    previousPrefix: 'angular2ws_',\n    clearType: 'prefix',\n    mutateObjects: true,\n    cookiesScope: '',\n    cookiesCheckInterval: 0,\n    debugMode: false,\n};\nvar ConfigFills = {};\nvar localStoragePrefix = ConfigHelper.getItem('prefix');\nif (typeof NGXSTORE_CONFIG === 'object') {\n    ConfigFills = Object.assign({}, NGXSTORE_CONFIG);\n}\nif (localStoragePrefix !== undefined && localStoragePrefix !== null) {\n    ConfigFills.previousPrefix = localStoragePrefix;\n}\nelse if (ConfigFills.previousPrefix === undefined) {\n    ConfigFills.previousPrefix = DefaultConfig.previousPrefix;\n}\n// merge default config, deprecated config and global config all together\nvar Config = Object.assign({}, DefaultConfig, ConfigFills);\nvar debug = new Debugger(console, Config.debugMode, '[ngx-store] ');\nConfigHelper.setItem('prefix', Config.prefix);\n\nvar _get = require('lodash.get');\nvar _set = require('lodash.set');\nvar _merge = require('lodash.merge');\nvar Resource = /** @class */ (function () {\n    function Resource(service, key) {\n        this.service = service;\n        this.key = key;\n        this._defaultValue = null;\n        this._path = [];\n        this._prefix = Config.prefix;\n    }\n    Object.defineProperty(Resource.prototype, \"value\", {\n        /**\n         * Returns value taking path into account\n         * @returns {any}\n         */\n        get: function () {\n            return this.considerDefault(this.readValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Resource.prototype, \"defaultValue\", {\n        /**\n         * Returns default value\n         * @returns {T}\n         */\n        get: function () {\n            return this._defaultValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Resource.prototype, \"path\", {\n        /**\n         * Returns current path as a string\n         * @returns {string}\n         */\n        get: function () {\n            return this.pathString;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Resource.prototype, \"prefix\", {\n        /**\n         * Returns currently set prefix\n         * @returns {string}\n         */\n        get: function () {\n            return this._prefix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets path of object property\n     * @param {string} path\n     * @returns {this}\n     */\n    Resource.prototype.setPath = function (path) {\n        this._path = path.split('.');\n        return this;\n    };\n    /**\n     * Appends current path\n     * e.g. if path('key') and appendPath('nested'), the path will be \"key.nested\"\n     * @param {string} path\n     * @returns {this}\n     */\n    Resource.prototype.appendPath = function (path) {\n        this._path.push(path);\n        return this;\n    };\n    /**\n     * Removes last item of path\n     * e.g. if path('key.nested') and truncatePath(), the path will be \"key\"\n     * @returns {this}\n     */\n    Resource.prototype.truncatePath = function () {\n        this._path.pop();\n        return this;\n    };\n    /**\n     * Resets set path\n     * @returns {this}\n     */\n    Resource.prototype.resetPath = function () {\n        this._path = [];\n        return this;\n    };\n    /**\n     * Sets prefix\n     * @param {string} prefix\n     * @returns {this}\n     */\n    Resource.prototype.setPrefix = function (prefix) {\n        this._prefix = prefix;\n        return this;\n    };\n    /**\n     * Moves storage item to new key using given prefix\n     * @param {string} prefix\n     * @returns {this}\n     */\n    Resource.prototype.changePrefix = function (prefix) {\n        this.service.utility.set(this.key, this.fullValue, { prefix: prefix });\n        this.service.utility.remove(this.key, { prefix: this._prefix });\n        return this.setPrefix(prefix);\n    };\n    /**\n     * Sets default value for both reading and saving operations\n     * @param defaultValue\n     * @returns {this}\n     */\n    Resource.prototype.setDefaultValue = function (defaultValue) {\n        this._defaultValue = defaultValue;\n        var value = this.readValue();\n        if (this.isNullOrUndefined(value)) {\n            this.save(defaultValue);\n        }\n        return this;\n    };\n    /**\n     * Creates or overrides value as a new entry or existing object property depending on path\n     * @param value\n     * @returns {this}\n     */\n    Resource.prototype.save = function (value) {\n        if (this.pathString) {\n            value = _set(this.fullValue, this.pathString, this.considerDefault(value));\n        }\n        this.service.utility.set(this.key, this.considerDefault(value), { prefix: this._prefix });\n        return this;\n    };\n    /**\n     * Updates existing object property using current path\n     * @param {T} value\n     * @returns {this}\n     */\n    Resource.prototype.update = function (value) {\n        return this.save(_merge(this.readValue(), value));\n    };\n    /**\n     * Removes item stored under current key\n     * @returns {this}\n     */\n    Resource.prototype.remove = function () {\n        this.service.utility.remove(this.key);\n        return this;\n    };\n    Object.defineProperty(Resource.prototype, \"fullValue\", {\n        get: function () {\n            return this.considerDefault(this.service.utility.get(this.key, { prefix: this._prefix }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Resource.prototype.considerDefault = function (value) {\n        return this.isNullOrUndefined(value) ? this._defaultValue : value;\n    };\n    Resource.prototype.isNullOrUndefined = function (value) {\n        return (value === null || value === undefined);\n    };\n    Object.defineProperty(Resource.prototype, \"pathString\", {\n        get: function () {\n            return this._path.join('.');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Resource.prototype.readValue = function () {\n        var value = this.service.utility.get(this.key, { prefix: this._prefix });\n        if (this.pathString) {\n            return _get(value, this.pathString);\n        }\n        return value;\n    };\n    return Resource;\n}());\n\nvar merge$1 = require('lodash.merge');\nvar WebStorageService = /** @class */ (function () {\n    function WebStorageService(utility) {\n        this.utility = utility;\n    }\n    Object.defineProperty(WebStorageService.prototype, \"keys\", {\n        /**\n         * Gets keys for stored variables created by ngx-store,\n         * ignores keys that have not been created by decorators and have no prefix at once\n         */\n        get: function () {\n            var _this = this;\n            // get prefixed key if prefix is defined\n            var prefixKeys = this.utility.keys.filter(function (key) {\n                return _this.utility.prefix && key.startsWith(_this.utility.prefix);\n            });\n            var decoratorKeys = this.constructor.keys;\n            return prefixKeys.concat(decoratorKeys);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WebStorageService.prototype, \"config\", {\n        get: function () {\n            return Config;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WebStorageService.prototype.get = function (key) {\n        return this.utility.get(key);\n    };\n    /**\n     * Returns new data Resource for given key exposing builder design pattern\n     * designed for complex nested data structures\n     * @param {string} key\n     * @returns {any}\n     */\n    WebStorageService.prototype.load = function (key) {\n        return new Resource(this, key);\n    };\n    WebStorageService.prototype.set = function (key, value) {\n        return this.utility.set(key, value);\n    };\n    WebStorageService.prototype.update = function (key, changes) {\n        var value = this.get(key);\n        if (value !== undefined && typeof value !== 'object') {\n            debug.throw(new Error(\"Value stored under \\\"\" + key + \"\\\" key is not an object and tried to be updated.\"));\n            return value;\n        }\n        return this.set(key, merge$1({}, value, changes));\n    };\n    // TODO return true if item existed and false otherwise (?)\n    WebStorageService.prototype.remove = function (key) {\n        return this.utility.remove(key);\n    };\n    WebStorageService.prototype.observe = function (key, exactMatch) {\n        return this._changes.pipe(filter(function (event) {\n            if (!key) {\n                return true;\n            }\n            if (exactMatch) {\n                if (key.startsWith(Config.prefix)) {\n                    return event.key === key;\n                }\n                return event.key === Config.prefix + key;\n            }\n            else {\n                return event.key.indexOf(key) !== -1;\n            }\n        }), delay(30) // event should come after actual data change and propagation\n        );\n    };\n    /**\n     * Clears chosen data from Storage\n     * @param clearType 'prefix' | 'decorators' | 'all'\n     * @param prefixOrClass defines the prefix or class (not its instance) whose decorators should be cleared\n     */\n    WebStorageService.prototype.clear = function (clearType, prefixOrClass) {\n        var _this = this;\n        clearType = clearType || Config.clearType;\n        if (clearType === 'decorators') {\n            var keys = [];\n            if (typeof prefixOrClass === 'object') {\n                keys = this.keys.filter(function (key) { return Cache.get(key).targets.indexOf(prefixOrClass) !== -1; });\n                debug.log(this.utility.getStorageName() + ' > Removing decorated data from ' + prefixOrClass.constructor.name + ':', keys);\n            }\n            else {\n                keys = this.keys;\n                debug.log(this.utility.getStorageName() + ' > Removing decorated data:', keys);\n            }\n            keys.forEach(function (key) { return _this.remove(key); });\n        }\n        else if (clearType === 'prefix') {\n            prefixOrClass = prefixOrClass || this.utility.prefix;\n            this.utility.forEach(function (value, key) {\n                if (key.startsWith(prefixOrClass)) {\n                    _this.remove(_this.utility.trimPrefix(key));\n                }\n            });\n        }\n        else if (clearType === 'all') {\n            this.utility.clear();\n        }\n    };\n    WebStorageService.prototype.generateEvent = function (key, newValue, oldValue) {\n        var type = this.utility.getStorageName().charAt(0).toLowerCase() + this.utility.getStorageName().slice(1);\n        var event = new NgxStorageEvent(type, key, this.utility.getStorage());\n        event.oldValue = (oldValue !== undefined) ? oldValue : this.get(key);\n        event.newValue = newValue;\n        return event;\n    };\n    WebStorageService.prototype.mapNativeEvent = function (ev) {\n        var event = this.generateEvent(ev.key, this.utility.getGettable(ev.newValue), this.utility.getGettable(ev.oldValue));\n        event.isInternal = false;\n        return event;\n    };\n    WebStorageService.keys = [];\n    return WebStorageService;\n}());\n\n// TODO: in the future use ES6 Proxy to handle indexers\nvar NgxStorage = /** @class */ (function () {\n    function NgxStorage() {\n        this.externalChanges = new Subject();\n    }\n    NgxStorage.prototype.emitEvent = function (key, newValue, oldValue) {\n        var event = new NgxStorageEvent(this.type, key, this);\n        event.oldValue = (oldValue !== undefined) ? oldValue : this.getItem(key);\n        event.newValue = newValue;\n        event.isInternal = false;\n        this.externalChanges.next(event);\n    };\n    return NgxStorage;\n}());\n\nvar CookiesStorage = /** @class */ (function (_super) {\n    __extends(CookiesStorage, _super);\n    function CookiesStorage() {\n        var _this = _super.call(this) || this;\n        _this.getAllItems();\n        if (Config.cookiesCheckInterval) {\n            interval(Config.cookiesCheckInterval)\n                .subscribe(function () {\n                if (!_this.externalChanges.observers.length) {\n                    return; // don't run if there are no set subscriptions\n                }\n                _this.getAllItems();\n            });\n        }\n        return _this;\n    }\n    Object.defineProperty(CookiesStorage.prototype, \"type\", {\n        get: function () {\n            return 'cookiesStorage';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CookiesStorage.prototype, \"length\", {\n        get: function () {\n            return this.getAllKeys().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CookiesStorage.prototype.key = function (index) {\n        return this.getAllKeys()[index];\n    };\n    CookiesStorage.prototype.getItem = function (key) {\n        return this.getAllItems().get(key);\n    };\n    CookiesStorage.prototype.removeItem = function (key) {\n        if (typeof document === 'undefined')\n            return;\n        var domain = this.resolveDomain(Config.cookiesScope);\n        domain = (domain) ? 'domain=' + domain + ';' : '';\n        document.cookie = key + '=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/;' + domain;\n        this.cachedItemsMap.delete(key);\n    };\n    /**\n     * @param key\n     * @param value\n     * @param expirationDate passing null affects in lifetime cookie\n     */\n    CookiesStorage.prototype.setItem = function (key, value, expirationDate) {\n        if (typeof document === 'undefined')\n            return;\n        var domain = this.resolveDomain(Config.cookiesScope);\n        debug.log('Cookies domain:', domain);\n        domain = (domain) ? 'domain=' + domain + ';' : '';\n        var utcDate = '';\n        if (expirationDate instanceof Date) {\n            utcDate = expirationDate.toUTCString();\n        }\n        else if (expirationDate === null) {\n            utcDate = 'Fri, 18 Dec 2099 12:00:00 GMT';\n        }\n        var expires = utcDate ? '; expires=' + utcDate : '';\n        var cookie = key + '=' + value + expires + ';path=/;' + domain;\n        debug.log('Cookie`s set instruction:', cookie);\n        this.cachedItemsMap.set(key, value);\n        document.cookie = cookie;\n    };\n    CookiesStorage.prototype.clear = function () {\n        var _this = this;\n        this.getAllKeys().forEach(function (key) { return _this.removeItem(key); });\n    };\n    CookiesStorage.prototype.forEach = function (callbackFn) {\n        return this.getAllItems().forEach(function (value, key) { return callbackFn(value, key); });\n    };\n    CookiesStorage.prototype.getAllKeys = function () {\n        return Array.from(this.getAllItems().keys());\n    };\n    // TODO: consider getting cookies from all paths\n    CookiesStorage.prototype.getAllItems = function () {\n        var _this = this;\n        if (this.cachedCookieString === document.cookie) { // No changes\n            return this.cachedItemsMap;\n        }\n        var map$$1 = new Map();\n        if (typeof document === 'undefined')\n            return map$$1;\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].trim();\n            var eqPos = cookie.indexOf('=');\n            var key = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n            var value = eqPos > -1 ? cookie.substr(eqPos + 1, cookie.length) : cookie;\n            map$$1.set(key, value);\n        }\n        // detect changes and emit events\n        if (this.cachedItemsMap) {\n            map$$1.forEach(function (value, key) {\n                var cachedValue = _this.cachedItemsMap.get(key);\n                cachedValue = (cachedValue !== undefined) ? cachedValue : null;\n                if (value !== cachedValue) {\n                    _this.emitEvent(key, WebStorageUtility.getGettable(value), WebStorageUtility.getGettable(cachedValue));\n                }\n            });\n            this.cachedItemsMap.forEach(function (value, key) {\n                if (!map$$1.has(key)) {\n                    _this.emitEvent(key, null, WebStorageUtility.getGettable(value));\n                }\n            });\n        }\n        this.cachedCookieString = document.cookie;\n        return this.cachedItemsMap = map$$1;\n    };\n    /**\n     * domain.com         + path=\".\"          = .domain.com\n     * domain.com         + path=\".sub.\"      = .sub.domain.com\n     * sub.domain.com     + path=\"sub.\"       = sub.domain.com\n     * www.sub.domain.com + path=\".\"          = .sub.domain.com\n     * localhost          + path=\".whatever.\" = localhost\n     * @param path\n     */\n    CookiesStorage.prototype.resolveDomain = function (path) {\n        if (!path)\n            return '';\n        var hostname = document.domain;\n        if ((hostname.match(/\\./g) || []).length < 1) {\n            return '';\n        }\n        var www = (path[0] !== '.' && hostname.indexOf('www.') === 0) ? 'www.' : '';\n        return www + path + this.getDomain();\n    };\n    /**\n     * This function determines base domain by setting cookie at the highest level possible\n     * @url http://rossscrivener.co.uk/blog/javascript-get-domain-exclude-subdomain\n     */\n    CookiesStorage.prototype.getDomain = function () {\n        var i = 0;\n        var domain = document.domain;\n        var domainParts = domain.split('.');\n        var s = '_gd' + (new Date()).getTime();\n        while (i < (domainParts.length - 1) && document.cookie.indexOf(s + '=' + s) === -1) {\n            domain = domainParts.slice(-1 - (++i)).join('.');\n            document.cookie = s + '=' + s + ';domain=' + domain + ';';\n        }\n        document.cookie = s + '=;expires=Thu, 01 Jan 1970 00:00:00 GMT;domain=' + domain + ';';\n        return domain;\n    };\n    return CookiesStorage;\n}(NgxStorage));\nvar cookiesStorage = new CookiesStorage();\n\nvar SharedStorageUtility = /** @class */ (function (_super) {\n    __extends(SharedStorageUtility, _super);\n    function SharedStorageUtility() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SharedStorageUtility.prototype.getSettable = function (value) {\n        return value;\n    };\n    SharedStorageUtility.prototype.getGettable = function (value) {\n        return value;\n    };\n    return SharedStorageUtility;\n}(WebStorageUtility));\n\nvar SharedStorage = /** @class */ (function (_super) {\n    __extends(SharedStorage, _super);\n    function SharedStorage() {\n        var _this = _super.call(this) || this;\n        _this.sharedMap = new Map();\n        _this.externalChanges = undefined;\n        return _this;\n    }\n    Object.defineProperty(SharedStorage.prototype, \"type\", {\n        get: function () {\n            return 'sharedStorage';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SharedStorage.prototype, \"length\", {\n        get: function () {\n            return this.getAllKeys().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SharedStorage.prototype.key = function (index) {\n        return this.getAllKeys()[index];\n    };\n    SharedStorage.prototype.getItem = function (key) {\n        var value = this.sharedMap.get(key);\n        return (value !== undefined) ? value : null;\n    };\n    SharedStorage.prototype.removeItem = function (key) {\n        this.sharedMap.delete(key);\n    };\n    SharedStorage.prototype.setItem = function (key, value) {\n        this.sharedMap.set(key, value);\n    };\n    SharedStorage.prototype.clear = function () {\n        this.sharedMap.clear();\n    };\n    SharedStorage.prototype.forEach = function (func) {\n        return this.sharedMap.forEach(function (value, key) { return func(value, key); });\n    };\n    SharedStorage.prototype.getAllKeys = function () {\n        return Array.from(this.sharedMap.keys());\n    };\n    return SharedStorage;\n}(NgxStorage));\nvar sharedStorage = new SharedStorage();\n\nvar localStorageUtility = new WebStorageUtility(localStorage, Config.prefix, Config.previousPrefix);\nvar sessionStorageUtility = new WebStorageUtility(sessionStorage, Config.prefix, Config.previousPrefix);\nvar cookiesStorageUtility = new WebStorageUtility(cookiesStorage, Config.prefix, Config.previousPrefix);\nvar sharedStorageUtility = new SharedStorageUtility(sharedStorage, Config.prefix, Config.prefix);\n\nvar LocalStorageService = /** @class */ (function (_super) {\n    __extends(LocalStorageService, _super);\n    function LocalStorageService() {\n        var _this = _super.call(this, localStorageUtility) || this;\n        _this._changes =\n            merge(fromEvent(window, 'storage')\n                .pipe(filter(function (event) { return event.storageArea === localStorage; }), map(function (event) { return _this.mapNativeEvent(event); })), localStorageUtility.changes);\n        return _this;\n    }\n    LocalStorageService.keys = [];\n    LocalStorageService = __decorate([\n        core.Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], LocalStorageService);\n    return LocalStorageService;\n}(WebStorageService));\n\nvar SessionStorageService = /** @class */ (function (_super) {\n    __extends(SessionStorageService, _super);\n    function SessionStorageService() {\n        var _this = _super.call(this, sessionStorageUtility) || this;\n        _this._changes =\n            merge(fromEvent(window, 'storage')\n                .pipe(filter(function (event) { return event.storageArea === sessionStorage; }), map(function (event) { return _this.mapNativeEvent(event); })), sessionStorageUtility.changes);\n        return _this;\n    }\n    SessionStorageService.keys = [];\n    SessionStorageService = __decorate([\n        core.Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], SessionStorageService);\n    return SessionStorageService;\n}(WebStorageService));\n\nvar CookiesStorageService = /** @class */ (function (_super) {\n    __extends(CookiesStorageService, _super);\n    function CookiesStorageService() {\n        var _this = _super.call(this, cookiesStorageUtility) || this;\n        _this._changes =\n            merge(cookiesStorage.externalChanges.asObservable(), cookiesStorageUtility.changes);\n        return _this;\n    }\n    CookiesStorageService.prototype.set = function (key, value, expirationDate) {\n        return this.utility.set(key, value, { expires: expirationDate });\n    };\n    CookiesStorageService.keys = [];\n    CookiesStorageService = __decorate([\n        core.Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], CookiesStorageService);\n    return CookiesStorageService;\n}(WebStorageService));\n\nvar SharedStorageService = /** @class */ (function (_super) {\n    __extends(SharedStorageService, _super);\n    function SharedStorageService() {\n        var _this = _super.call(this, sharedStorageUtility) || this;\n        _this._changes = sharedStorageUtility.changes;\n        return _this;\n    }\n    SharedStorageService.keys = [];\n    SharedStorageService = __decorate([\n        core.Injectable(),\n        __metadata(\"design:paramtypes\", [])\n    ], SharedStorageService);\n    return SharedStorageService;\n}(WebStorageService));\n\nfunction LocalStorage(keyOrConfig, config) {\n    return WebStorage(localStorageUtility, LocalStorageService, keyOrConfig, config);\n}\nfunction SessionStorage(keyOrConfig, config) {\n    return WebStorage(sessionStorageUtility, SessionStorageService, keyOrConfig, config);\n}\nfunction CookieStorage(keyOrConfig, config) {\n    return WebStorage(cookiesStorageUtility, CookiesStorageService, keyOrConfig, config);\n}\nfunction SharedStorage$1(keyOrConfig, config) {\n    return WebStorage(sharedStorageUtility, SharedStorageService, keyOrConfig, config);\n}\nfunction WebStorage(webStorageUtility, service, keyOrConfig, config) {\n    if (config === void 0) { config = {}; }\n    return function (target, propertyName) {\n        var key;\n        if (typeof keyOrConfig === 'object') {\n            key = keyOrConfig.key;\n            config = keyOrConfig;\n        }\n        else if (typeof keyOrConfig === 'string') {\n            key = keyOrConfig;\n        }\n        key = key || config.key || propertyName;\n        var cacheItem = Cache.getCacheFor({\n            key: key,\n            name: propertyName,\n            targets: [target],\n            services: [service],\n            utilities: [{\n                    utility: webStorageUtility,\n                    config: config,\n                }],\n        });\n        Object.defineProperty(target, propertyName, {\n            get: function () {\n                return cacheItem.getProxy(undefined, config);\n            },\n            set: function (value) {\n                if (!Cache.get(cacheItem.key)) {\n                    cacheItem = Cache.getCacheFor(cacheItem);\n                }\n                cacheItem.addTargets([target]);\n                cacheItem.currentTarget = target;\n                cacheItem.saveValue(value, config);\n            },\n        });\n        return target;\n    };\n}\n\n// Public classes.\nvar WebStorageModule = /** @class */ (function () {\n    function WebStorageModule() {\n    }\n    WebStorageModule = __decorate([\n        core.NgModule({\n            providers: [\n                LocalStorageService,\n                SessionStorageService,\n                CookiesStorageService,\n                SharedStorageService,\n            ]\n        })\n    ], WebStorageModule);\n    return WebStorageModule;\n}());\n\nexports.Éµa = WebStorageUtility;\nexports.WebStorageModule = WebStorageModule;\nexports.CookieStorage = CookieStorage;\nexports.LocalStorage = LocalStorage;\nexports.SessionStorage = SessionStorage;\nexports.SharedStorage = SharedStorage$1;\nexports.TempStorage = SharedStorage$1;\nexports.WebStorageService = WebStorageService;\nexports.CookiesStorageService = CookiesStorageService;\nexports.LocalStorageService = LocalStorageService;\nexports.SessionStorageService = SessionStorageService;\nexports.SharedStorageService = SharedStorageService;\nexports.TempStorageService = SharedStorageService;\nexports.NgxStorageEvent = NgxStorageEvent;\nexports.NgxResource = Resource;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ngx-store.umd.js.map\n"]}